# Makefile.in generated by automake 1.11.6 from Makefile.am.
# docs/examples/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#***************************************************************************
#                                  _   _ ____  _
#  Project                     ___| | | |  _ \| |
#                             / __| | | | |_) | |
#                            | (__| |_| |  _ <| |___
#                             \___|\___/|_| \_\_____|
#
# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution. The terms
# are also available at http://curl.haxx.se/docs/copyright.html.
#
# You may opt to use, copy, modify, merge, publish, distribute and/or sell
# copies of the Software, and permit persons to whom the Software is
# furnished to do so, under the terms of the COPYING file.
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# KIND, either express or implied.
#
###########################################################################

am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/curl
pkgincludedir = $(includedir)/curl
pkglibdir = $(libdir)/curl
pkglibexecdir = $(libexecdir)/curl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = mips-rlx5281-linux-gnu
#am__append_1 = -DCURL_STATICLIB
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.inc
check_PROGRAMS = 10-at-a-time$(EXEEXT) anyauthput$(EXEEXT) \
	cookie_interface$(EXEEXT) debug$(EXEEXT) fileupload$(EXEEXT) \
	fopen$(EXEEXT) ftpget$(EXEEXT) ftpgetresp$(EXEEXT) \
	ftpupload$(EXEEXT) getinfo$(EXEEXT) getinmemory$(EXEEXT) \
	http-post$(EXEEXT) httpput$(EXEEXT) https$(EXEEXT) \
	multi-app$(EXEEXT) multi-debugcallback$(EXEEXT) \
	multi-double$(EXEEXT) multi-post$(EXEEXT) \
	multi-single$(EXEEXT) persistant$(EXEEXT) \
	post-callback$(EXEEXT) postit2$(EXEEXT) sepheaders$(EXEEXT) \
	simple$(EXEEXT) simplepost$(EXEEXT) simplessl$(EXEEXT) \
	sendrecv$(EXEEXT) httpcustomheader$(EXEEXT) certinfo$(EXEEXT) \
	chkspeed$(EXEEXT) ftpgetinfo$(EXEEXT) ftp-wildcard$(EXEEXT) \
	smtp-mail$(EXEEXT) smtp-multi$(EXEEXT) smtp-ssl$(EXEEXT) \
	smtp-tls$(EXEEXT) smtp-vrfy$(EXEEXT) smtp-expn$(EXEEXT) \
	rtsp$(EXEEXT) externalsocket$(EXEEXT) resolve$(EXEEXT) \
	progressfunc$(EXEEXT) pop3-retr$(EXEEXT) pop3-list$(EXEEXT) \
	pop3-uidl$(EXEEXT) pop3-dele$(EXEEXT) pop3-top$(EXEEXT) \
	pop3-stat$(EXEEXT) pop3-noop$(EXEEXT) pop3-ssl$(EXEEXT) \
	pop3-tls$(EXEEXT) pop3-multi$(EXEEXT) imap-list$(EXEEXT) \
	imap-lsub$(EXEEXT) imap-fetch$(EXEEXT) imap-store$(EXEEXT) \
	imap-append$(EXEEXT) imap-examine$(EXEEXT) \
	imap-search$(EXEEXT) imap-create$(EXEEXT) imap-delete$(EXEEXT) \
	imap-copy$(EXEEXT) imap-noop$(EXEEXT) imap-ssl$(EXEEXT) \
	imap-tls$(EXEEXT) imap-multi$(EXEEXT) url2file$(EXEEXT) \
	sftpget$(EXEEXT) ftpsget$(EXEEXT) postinmemory$(EXEEXT)
subdir = docs/examples
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
	$(top_srcdir)/m4/curl-confopts.m4 \
	$(top_srcdir)/m4/curl-functions.m4 \
	$(top_srcdir)/m4/curl-openssl.m4 \
	$(top_srcdir)/m4/curl-override.m4 \
	$(top_srcdir)/m4/curl-reentrant.m4 \
	$(top_srcdir)/m4/xc-am-iface.m4 \
	$(top_srcdir)/m4/xc-cc-check.m4 \
	$(top_srcdir)/m4/xc-lt-iface.m4 \
	$(top_srcdir)/m4/xc-translit.m4 \
	$(top_srcdir)/m4/xc-val-flgs.m4 \
	$(top_srcdir)/m4/zz40-xc-ovr.m4 \
	$(top_srcdir)/m4/zz50-xc-ovr.m4 \
	$(top_srcdir)/m4/zz60-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/lib/curl_config.h \
	$(top_builddir)/include/curl/curlbuild.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
10_at_a_time_SOURCES = 10-at-a-time.c
10_at_a_time_OBJECTS = 10-at-a-time.$(OBJEXT)
10_at_a_time_LDADD = $(LDADD)
#10_at_a_time_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
10_at_a_time_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
anyauthput_SOURCES = anyauthput.c
anyauthput_OBJECTS = anyauthput.$(OBJEXT)
anyauthput_LDADD = $(LDADD)
#anyauthput_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
anyauthput_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
certinfo_SOURCES = certinfo.c
certinfo_OBJECTS = certinfo.$(OBJEXT)
certinfo_LDADD = $(LDADD)
#certinfo_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
certinfo_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
chkspeed_SOURCES = chkspeed.c
chkspeed_OBJECTS = chkspeed.$(OBJEXT)
chkspeed_LDADD = $(LDADD)
#chkspeed_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
chkspeed_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
cookie_interface_SOURCES = cookie_interface.c
cookie_interface_OBJECTS = cookie_interface.$(OBJEXT)
cookie_interface_LDADD = $(LDADD)
#cookie_interface_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
cookie_interface_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
debug_SOURCES = debug.c
debug_OBJECTS = debug.$(OBJEXT)
debug_LDADD = $(LDADD)
#debug_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
debug_DEPENDENCIES = $(LIBDIR)/libcurl.la
externalsocket_SOURCES = externalsocket.c
externalsocket_OBJECTS = externalsocket.$(OBJEXT)
externalsocket_LDADD = $(LDADD)
#externalsocket_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
externalsocket_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
fileupload_SOURCES = fileupload.c
fileupload_OBJECTS = fileupload.$(OBJEXT)
fileupload_LDADD = $(LDADD)
#fileupload_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
fileupload_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
fopen_SOURCES = fopen.c
fopen_OBJECTS = fopen.$(OBJEXT)
fopen_LDADD = $(LDADD)
#fopen_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
fopen_DEPENDENCIES = $(LIBDIR)/libcurl.la
ftp_wildcard_SOURCES = ftp-wildcard.c
ftp_wildcard_OBJECTS = ftp-wildcard.$(OBJEXT)
ftp_wildcard_LDADD = $(LDADD)
#ftp_wildcard_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
ftp_wildcard_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
ftpget_SOURCES = ftpget.c
ftpget_OBJECTS = ftpget.$(OBJEXT)
ftpget_LDADD = $(LDADD)
#ftpget_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
ftpget_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
ftpgetinfo_SOURCES = ftpgetinfo.c
ftpgetinfo_OBJECTS = ftpgetinfo.$(OBJEXT)
ftpgetinfo_LDADD = $(LDADD)
#ftpgetinfo_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
ftpgetinfo_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
ftpgetresp_SOURCES = ftpgetresp.c
ftpgetresp_OBJECTS = ftpgetresp.$(OBJEXT)
ftpgetresp_LDADD = $(LDADD)
#ftpgetresp_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
ftpgetresp_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
ftpsget_SOURCES = ftpsget.c
ftpsget_OBJECTS = ftpsget.$(OBJEXT)
ftpsget_LDADD = $(LDADD)
#ftpsget_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
ftpsget_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
ftpupload_SOURCES = ftpupload.c
ftpupload_OBJECTS = ftpupload.$(OBJEXT)
ftpupload_LDADD = $(LDADD)
#ftpupload_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
ftpupload_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
getinfo_SOURCES = getinfo.c
getinfo_OBJECTS = getinfo.$(OBJEXT)
getinfo_LDADD = $(LDADD)
#getinfo_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
getinfo_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
getinmemory_SOURCES = getinmemory.c
getinmemory_OBJECTS = getinmemory.$(OBJEXT)
getinmemory_LDADD = $(LDADD)
#getinmemory_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
getinmemory_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
http_post_SOURCES = http-post.c
http_post_OBJECTS = http-post.$(OBJEXT)
http_post_LDADD = $(LDADD)
#http_post_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
http_post_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
httpcustomheader_SOURCES = httpcustomheader.c
httpcustomheader_OBJECTS = httpcustomheader.$(OBJEXT)
httpcustomheader_LDADD = $(LDADD)
#httpcustomheader_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
httpcustomheader_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
httpput_SOURCES = httpput.c
httpput_OBJECTS = httpput.$(OBJEXT)
httpput_LDADD = $(LDADD)
#httpput_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
httpput_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
https_SOURCES = https.c
https_OBJECTS = https.$(OBJEXT)
https_LDADD = $(LDADD)
#https_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
https_DEPENDENCIES = $(LIBDIR)/libcurl.la
imap_append_SOURCES = imap-append.c
imap_append_OBJECTS = imap-append.$(OBJEXT)
imap_append_LDADD = $(LDADD)
#imap_append_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_append_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_copy_SOURCES = imap-copy.c
imap_copy_OBJECTS = imap-copy.$(OBJEXT)
imap_copy_LDADD = $(LDADD)
#imap_copy_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_copy_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_create_SOURCES = imap-create.c
imap_create_OBJECTS = imap-create.$(OBJEXT)
imap_create_LDADD = $(LDADD)
#imap_create_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_create_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_delete_SOURCES = imap-delete.c
imap_delete_OBJECTS = imap-delete.$(OBJEXT)
imap_delete_LDADD = $(LDADD)
#imap_delete_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_delete_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_examine_SOURCES = imap-examine.c
imap_examine_OBJECTS = imap-examine.$(OBJEXT)
imap_examine_LDADD = $(LDADD)
#imap_examine_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_examine_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_fetch_SOURCES = imap-fetch.c
imap_fetch_OBJECTS = imap-fetch.$(OBJEXT)
imap_fetch_LDADD = $(LDADD)
#imap_fetch_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_fetch_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_list_SOURCES = imap-list.c
imap_list_OBJECTS = imap-list.$(OBJEXT)
imap_list_LDADD = $(LDADD)
#imap_list_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_list_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_lsub_SOURCES = imap-lsub.c
imap_lsub_OBJECTS = imap-lsub.$(OBJEXT)
imap_lsub_LDADD = $(LDADD)
#imap_lsub_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_lsub_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_multi_SOURCES = imap-multi.c
imap_multi_OBJECTS = imap-multi.$(OBJEXT)
imap_multi_LDADD = $(LDADD)
#imap_multi_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_multi_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_noop_SOURCES = imap-noop.c
imap_noop_OBJECTS = imap-noop.$(OBJEXT)
imap_noop_LDADD = $(LDADD)
#imap_noop_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_noop_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_search_SOURCES = imap-search.c
imap_search_OBJECTS = imap-search.$(OBJEXT)
imap_search_LDADD = $(LDADD)
#imap_search_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_search_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_ssl_SOURCES = imap-ssl.c
imap_ssl_OBJECTS = imap-ssl.$(OBJEXT)
imap_ssl_LDADD = $(LDADD)
#imap_ssl_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_ssl_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_store_SOURCES = imap-store.c
imap_store_OBJECTS = imap-store.$(OBJEXT)
imap_store_LDADD = $(LDADD)
#imap_store_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_store_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
imap_tls_SOURCES = imap-tls.c
imap_tls_OBJECTS = imap-tls.$(OBJEXT)
imap_tls_LDADD = $(LDADD)
#imap_tls_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
imap_tls_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
multi_app_SOURCES = multi-app.c
multi_app_OBJECTS = multi-app.$(OBJEXT)
multi_app_LDADD = $(LDADD)
#multi_app_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
multi_app_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
multi_debugcallback_SOURCES = multi-debugcallback.c
multi_debugcallback_OBJECTS = multi-debugcallback.$(OBJEXT)
multi_debugcallback_LDADD = $(LDADD)
#multi_debugcallback_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
multi_debugcallback_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
multi_double_SOURCES = multi-double.c
multi_double_OBJECTS = multi-double.$(OBJEXT)
multi_double_LDADD = $(LDADD)
#multi_double_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
multi_double_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
multi_post_SOURCES = multi-post.c
multi_post_OBJECTS = multi-post.$(OBJEXT)
multi_post_LDADD = $(LDADD)
#multi_post_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
multi_post_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
multi_single_SOURCES = multi-single.c
multi_single_OBJECTS = multi-single.$(OBJEXT)
multi_single_LDADD = $(LDADD)
#multi_single_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
multi_single_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
persistant_SOURCES = persistant.c
persistant_OBJECTS = persistant.$(OBJEXT)
persistant_LDADD = $(LDADD)
#persistant_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
persistant_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_dele_SOURCES = pop3-dele.c
pop3_dele_OBJECTS = pop3-dele.$(OBJEXT)
pop3_dele_LDADD = $(LDADD)
#pop3_dele_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_dele_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_list_SOURCES = pop3-list.c
pop3_list_OBJECTS = pop3-list.$(OBJEXT)
pop3_list_LDADD = $(LDADD)
#pop3_list_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_list_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_multi_SOURCES = pop3-multi.c
pop3_multi_OBJECTS = pop3-multi.$(OBJEXT)
pop3_multi_LDADD = $(LDADD)
#pop3_multi_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_multi_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_noop_SOURCES = pop3-noop.c
pop3_noop_OBJECTS = pop3-noop.$(OBJEXT)
pop3_noop_LDADD = $(LDADD)
#pop3_noop_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_noop_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_retr_SOURCES = pop3-retr.c
pop3_retr_OBJECTS = pop3-retr.$(OBJEXT)
pop3_retr_LDADD = $(LDADD)
#pop3_retr_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_retr_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_ssl_SOURCES = pop3-ssl.c
pop3_ssl_OBJECTS = pop3-ssl.$(OBJEXT)
pop3_ssl_LDADD = $(LDADD)
#pop3_ssl_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_ssl_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_stat_SOURCES = pop3-stat.c
pop3_stat_OBJECTS = pop3-stat.$(OBJEXT)
pop3_stat_LDADD = $(LDADD)
#pop3_stat_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_stat_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_tls_SOURCES = pop3-tls.c
pop3_tls_OBJECTS = pop3-tls.$(OBJEXT)
pop3_tls_LDADD = $(LDADD)
#pop3_tls_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_tls_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_top_SOURCES = pop3-top.c
pop3_top_OBJECTS = pop3-top.$(OBJEXT)
pop3_top_LDADD = $(LDADD)
#pop3_top_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_top_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
pop3_uidl_SOURCES = pop3-uidl.c
pop3_uidl_OBJECTS = pop3-uidl.$(OBJEXT)
pop3_uidl_LDADD = $(LDADD)
#pop3_uidl_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
pop3_uidl_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
post_callback_SOURCES = post-callback.c
post_callback_OBJECTS = post-callback.$(OBJEXT)
post_callback_LDADD = $(LDADD)
#post_callback_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
post_callback_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
postinmemory_SOURCES = postinmemory.c
postinmemory_OBJECTS = postinmemory.$(OBJEXT)
postinmemory_LDADD = $(LDADD)
#postinmemory_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
postinmemory_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
postit2_SOURCES = postit2.c
postit2_OBJECTS = postit2.$(OBJEXT)
postit2_LDADD = $(LDADD)
#postit2_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
postit2_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
progressfunc_SOURCES = progressfunc.c
progressfunc_OBJECTS = progressfunc.$(OBJEXT)
progressfunc_LDADD = $(LDADD)
#progressfunc_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
progressfunc_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
resolve_SOURCES = resolve.c
resolve_OBJECTS = resolve.$(OBJEXT)
resolve_LDADD = $(LDADD)
#resolve_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
resolve_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
rtsp_SOURCES = rtsp.c
rtsp_OBJECTS = rtsp.$(OBJEXT)
rtsp_LDADD = $(LDADD)
#rtsp_DEPENDENCIES = $(LIBDIR)/libcurl.la
rtsp_DEPENDENCIES = $(LIBDIR)/libcurl.la
sendrecv_SOURCES = sendrecv.c
sendrecv_OBJECTS = sendrecv.$(OBJEXT)
sendrecv_LDADD = $(LDADD)
#sendrecv_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
sendrecv_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
sepheaders_SOURCES = sepheaders.c
sepheaders_OBJECTS = sepheaders.$(OBJEXT)
sepheaders_LDADD = $(LDADD)
#sepheaders_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
sepheaders_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
sftpget_SOURCES = sftpget.c
sftpget_OBJECTS = sftpget.$(OBJEXT)
sftpget_LDADD = $(LDADD)
#sftpget_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
sftpget_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
simple_SOURCES = simple.c
simple_OBJECTS = simple.$(OBJEXT)
simple_LDADD = $(LDADD)
#simple_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
simple_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
simplepost_SOURCES = simplepost.c
simplepost_OBJECTS = simplepost.$(OBJEXT)
simplepost_LDADD = $(LDADD)
#simplepost_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
simplepost_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
simplessl_SOURCES = simplessl.c
simplessl_OBJECTS = simplessl.$(OBJEXT)
simplessl_LDADD = $(LDADD)
#simplessl_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
simplessl_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
smtp_expn_SOURCES = smtp-expn.c
smtp_expn_OBJECTS = smtp-expn.$(OBJEXT)
smtp_expn_LDADD = $(LDADD)
#smtp_expn_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
smtp_expn_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
smtp_mail_SOURCES = smtp-mail.c
smtp_mail_OBJECTS = smtp-mail.$(OBJEXT)
smtp_mail_LDADD = $(LDADD)
#smtp_mail_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
smtp_mail_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
smtp_multi_SOURCES = smtp-multi.c
smtp_multi_OBJECTS = smtp-multi.$(OBJEXT)
smtp_multi_LDADD = $(LDADD)
#smtp_multi_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
smtp_multi_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
smtp_ssl_SOURCES = smtp-ssl.c
smtp_ssl_OBJECTS = smtp-ssl.$(OBJEXT)
smtp_ssl_LDADD = $(LDADD)
#smtp_ssl_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
smtp_ssl_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
smtp_tls_SOURCES = smtp-tls.c
smtp_tls_OBJECTS = smtp-tls.$(OBJEXT)
smtp_tls_LDADD = $(LDADD)
#smtp_tls_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
smtp_tls_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
smtp_vrfy_SOURCES = smtp-vrfy.c
smtp_vrfy_OBJECTS = smtp-vrfy.$(OBJEXT)
smtp_vrfy_LDADD = $(LDADD)
#smtp_vrfy_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
smtp_vrfy_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
url2file_SOURCES = url2file.c
url2file_OBJECTS = url2file.$(OBJEXT)
url2file_LDADD = $(LDADD)
#url2file_DEPENDENCIES =  \
#	$(LIBDIR)/libcurl.la
url2file_DEPENDENCIES =  \
	$(LIBDIR)/libcurl.la
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = 10-at-a-time.c anyauthput.c certinfo.c chkspeed.c \
	cookie_interface.c debug.c externalsocket.c fileupload.c \
	fopen.c ftp-wildcard.c ftpget.c ftpgetinfo.c ftpgetresp.c \
	ftpsget.c ftpupload.c getinfo.c getinmemory.c http-post.c \
	httpcustomheader.c httpput.c https.c imap-append.c imap-copy.c \
	imap-create.c imap-delete.c imap-examine.c imap-fetch.c \
	imap-list.c imap-lsub.c imap-multi.c imap-noop.c imap-search.c \
	imap-ssl.c imap-store.c imap-tls.c multi-app.c \
	multi-debugcallback.c multi-double.c multi-post.c \
	multi-single.c persistant.c pop3-dele.c pop3-list.c \
	pop3-multi.c pop3-noop.c pop3-retr.c pop3-ssl.c pop3-stat.c \
	pop3-tls.c pop3-top.c pop3-uidl.c post-callback.c \
	postinmemory.c postit2.c progressfunc.c resolve.c rtsp.c \
	sendrecv.c sepheaders.c sftpget.c simple.c simplepost.c \
	simplessl.c smtp-expn.c smtp-mail.c smtp-multi.c smtp-ssl.c \
	smtp-tls.c smtp-vrfy.c url2file.c
DIST_SOURCES = 10-at-a-time.c anyauthput.c certinfo.c chkspeed.c \
	cookie_interface.c debug.c externalsocket.c fileupload.c \
	fopen.c ftp-wildcard.c ftpget.c ftpgetinfo.c ftpgetresp.c \
	ftpsget.c ftpupload.c getinfo.c getinmemory.c http-post.c \
	httpcustomheader.c httpput.c https.c imap-append.c imap-copy.c \
	imap-create.c imap-delete.c imap-examine.c imap-fetch.c \
	imap-list.c imap-lsub.c imap-multi.c imap-noop.c imap-search.c \
	imap-ssl.c imap-store.c imap-tls.c multi-app.c \
	multi-debugcallback.c multi-double.c multi-post.c \
	multi-single.c persistant.c pop3-dele.c pop3-list.c \
	pop3-multi.c pop3-noop.c pop3-retr.c pop3-ssl.c pop3-stat.c \
	pop3-tls.c pop3-top.c pop3-uidl.c post-callback.c \
	postinmemory.c postit2.c progressfunc.c resolve.c rtsp.c \
	sendrecv.c sepheaders.c sftpget.c simple.c simplepost.c \
	simplessl.c smtp-expn.c smtp-mail.c smtp-multi.c smtp-ssl.c \
	smtp-tls.c smtp-vrfy.c url2file.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} "/home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0/missing" --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = rsdk-linux-ar
AS = rsdk-linux-gcc -c -Os -pipe -march=5281 -fno-caller-saves -fpic
AUTOCONF = ${SHELL} "/home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0/missing" --run autoconf
AUTOHEADER = ${SHELL} "/home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0/missing" --run autoheader
AUTOMAKE = ${SHELL} "/home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0/missing" --run automake-1.11
AWK = gawk
BLANK_AT_MAKETIME = 
CC = rsdk-linux-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Os -pipe -march=5281 -fno-caller-saves -fpic -Wno-system-headers
CFLAG_CURL_SYMBOL_HIDING = -fvisibility=hidden
CONFIGURE_OPTIONS = " '--target=mips-rlx5281-linux' '--host=mips-rlx5281-linux' '--build=x86_64-linux-gnu' '--program-prefix=' '--program-suffix=' '--prefix=/usr' '--exec-prefix=/usr' '--bindir=/usr/bin' '--sbindir=/usr/sbin' '--libexecdir=/usr/lib' '--sysconfdir=/etc' '--datadir=/usr/share' '--localstatedir=/var' '--mandir=/usr/man' '--infodir=/usr/info' '--disable-nls' '--enable-shared' '--enable-static' '--disable-thread' '--enable-nonblocking' '--disable-ares' '--disable-debug' '--disable-manual' '--disable-verbose' '--without-ca-bundle' '--without-krb4' '--without-libidn' '--without-nss' '--without-libssh2' '--disable-ipv6' '--without-axtls' '--enable-cookies' '--disable-crypto-auth' '--without-cyassl' '--disable-dict' '--enable-file' '--enable-ftp' '--disable-gopher' '--without-gnutls' '--enable-http' '--disable-imap' '--disable-ldap' '--disable-ldaps' '--disable-libcurl-option' '--without-ssl' '--with-polarssl=/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/usr' '--disable-pop3' '--disable-proxy' '--disable-rtsp' '--disable-telnet' '--disable-tftp' '--disable-smtp' '--disable-sspi' '--disable-threaded-resolver' '--disable-tls-srp' '--without-zlib' 'build_alias=x86_64-linux-gnu' 'host_alias=mips-rlx5281-linux' 'target_alias=mips-rlx5281-linux' 'CC=rsdk-linux-gcc' 'CFLAGS=-Os -pipe -march=5281 -fno-caller-saves -fpic ' 'LDFLAGS=-L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/usr/lib -L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/lib -L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/rsdk-4.6.4-5281-EB-3.10-0.9.33-m32ub-20141001//lib ' 'CPPFLAGS=-I/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/usr/include -I/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/include -I/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/rsdk-4.6.4-5281-EB-3.10-0.9.33-m32ub-20141001//include '"
CPP = rsdk-linux-gcc -E
CPPFLAGS = -isystem /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/usr/include -isystem /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/include -isystem /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/rsdk-4.6.4-5281-EB-3.10-0.9.33-m32ub-20141001//include -I/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/usr/include
CPPFLAG_CURL_STATICLIB = 
CURLVERSION = 7.38.0
CURL_CA_BUNDLE = 
CURL_CFLAG_EXTRAS = 
CURL_DISABLE_DICT = 1
CURL_DISABLE_FILE = 
CURL_DISABLE_FTP = 
CURL_DISABLE_GOPHER = 1
CURL_DISABLE_HTTP = 
CURL_DISABLE_IMAP = 1
CURL_DISABLE_LDAP = 1
CURL_DISABLE_LDAPS = 1
CURL_DISABLE_POP3 = 1
CURL_DISABLE_PROXY = 1
CURL_DISABLE_RTSP = 1
CURL_DISABLE_SMTP = 1
CURL_DISABLE_TELNET = 1
CURL_DISABLE_TFTP = 1
CURL_LT_SHLIB_VERSIONED_FLAVOUR = 
CURL_NETWORK_AND_TIME_LIBS = 
CURL_NETWORK_LIBS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/host/bin/grep -E
ENABLE_SHARED = yes
ENABLE_STATIC = yes
EXEEXT = 
FGREP = /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/host/bin/grep -F
GREP = /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/host/bin/grep
HAVE_GNUTLS_SRP = 
HAVE_LDAP_SSL = 
HAVE_LIBZ = 
HAVE_SSLEAY_SRP = 
IDN_ENABLED = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IPV6_ENABLED = 
LD = rsdk-linux-ld
LDFLAGS = -L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/usr/lib -L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/lib -L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/rsdk-4.6.4-5281-EB-3.10-0.9.33-m32ub-20141001//lib -L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/usr/lib
LIBCURL_LIBS = -lpolarssl
LIBMETALINK_CPPFLAGS = 
LIBMETALINK_LDFLAGS = 
LIBMETALINK_LIBS = 
LIBOBJS = 

# Prevent LIBS from being used for all link targets
LIBS = $(BLANK_AT_MAKETIME)
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} "/home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0/missing" --run makeinfo
MANIFEST_TOOL = :
MANOPT = -man
MKDIR_P = /bin/mkdir -p
NM = rsdk-linux-nm
NMEDIT = 
NROFF = /usr/bin/nroff
NSS_LIBS = 
OBJDUMP = rsdk-linux-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = curl
PACKAGE_BUGREPORT = a suitable curl mailing list: http://curl.haxx.se/mail/
PACKAGE_NAME = curl
PACKAGE_STRING = curl -
PACKAGE_TARNAME = curl
PACKAGE_URL = 
PACKAGE_VERSION = -
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKGADD_NAME = cURL - a client that groks URLs
PKGADD_PKG = HAXXcurl
PKGADD_VENDOR = curl.haxx.se
PKGCONFIG = no
RANDOM_FILE = 
RANLIB = rsdk-linux-ranlib
REQUIRE_LIB_DEPS = yes
SED = /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/host/bin/sed
SET_MAKE = 
SHELL = /bin/bash
SSL_ENABLED = 1
STRIP = rsdk-linux-strip
SUPPORT_FEATURES = SSL
SUPPORT_PROTOCOLS = FILE FTP FTPS HTTP HTTPS
USE_ARES = 
USE_AXTLS = 
USE_CYASSL = 
USE_DARWINSSL = 
USE_GNUTLS = 
USE_GNUTLS_NETTLE = 
USE_LIBRTMP = 
USE_LIBSSH2 = 
USE_NGHTTP2 = 
USE_NSS = 
USE_OPENLDAP = 
USE_POLARSSL = yes
USE_SCHANNEL = 
USE_SSLEAY = 
USE_WINDOWS_SSPI = 
VERSION = -
VERSIONNUM = 072600
ZLIB_LIBS = 
abs_builddir = /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0/docs/examples
abs_srcdir = /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0/docs/examples
abs_top_builddir = /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0
abs_top_srcdir = /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = /usr/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = mips-rlx5281-linux-gnu
host_alias = mips-rlx5281-linux
host_cpu = mips
host_os = linux-gnu
host_vendor = rlx5281
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = /usr/info
install_sh = ${SHELL} /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/curl-7.38.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = /usr/lib
libext = a
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = /usr/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&$$&&;s&^&&
psdir = ${docdir}
sbindir = /usr/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs = 
sysconfdir = /etc
target_alias = mips-rlx5281-linux
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = foreign nostdinc
EXTRA_DIST = README Makefile.example Makefile.inc Makefile.m32 \
	Makefile.netware makefile.dj $(COMPLICATED_EXAMPLES)


# Specify our include paths here, and do it relative to $(top_srcdir) and
# $(top_builddir), to ensure that these paths which belong to the library
# being currently built and tested are searched before the library which
# might possibly already be installed in the system.
#
# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h
# $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h
# $(top_srcdir)/include is for libcurl's external include files

# Avoid libcurl obsolete stuff
AM_CPPFLAGS = -I$(top_builddir)/include/curl -I$(top_builddir)/include \
	-I$(top_srcdir)/include -DCURL_NO_OLDIES $(am__append_1)
LIBDIR = $(top_builddir)/lib
#LDADD = $(LIBDIR)/libcurl.la

# Dependencies
LDADD = $(LIBDIR)/libcurl.la -lpolarssl

# These examples require external dependencies that may not be commonly
# available on POSIX systems, so don't bother attempting to compile them here.
COMPLICATED_EXAMPLES = curlgtk.c curlx.c htmltitle.cpp cacertinmem.c	   \
  ftpuploadresume.c ghiper.c hiperfifo.c htmltidy.c multithread.c	   \
  opensslthreadlock.c sampleconv.c synctime.c threaded-ssl.c evhiperfifo.c \
  smooth-gtk-thread.c version-check.pl href_extractor.c asiohiper.cpp \
  multi-uv.c xmlstream.c usercertinmem.c sessioninfo.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/Makefile.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign docs/examples/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign docs/examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.inc:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
10-at-a-time$(EXEEXT): $(10_at_a_time_OBJECTS) $(10_at_a_time_DEPENDENCIES) $(EXTRA_10_at_a_time_DEPENDENCIES) 
	@rm -f 10-at-a-time$(EXEEXT)
	$(LINK) $(10_at_a_time_OBJECTS) $(10_at_a_time_LDADD) $(LIBS)
anyauthput$(EXEEXT): $(anyauthput_OBJECTS) $(anyauthput_DEPENDENCIES) $(EXTRA_anyauthput_DEPENDENCIES) 
	@rm -f anyauthput$(EXEEXT)
	$(LINK) $(anyauthput_OBJECTS) $(anyauthput_LDADD) $(LIBS)
certinfo$(EXEEXT): $(certinfo_OBJECTS) $(certinfo_DEPENDENCIES) $(EXTRA_certinfo_DEPENDENCIES) 
	@rm -f certinfo$(EXEEXT)
	$(LINK) $(certinfo_OBJECTS) $(certinfo_LDADD) $(LIBS)
chkspeed$(EXEEXT): $(chkspeed_OBJECTS) $(chkspeed_DEPENDENCIES) $(EXTRA_chkspeed_DEPENDENCIES) 
	@rm -f chkspeed$(EXEEXT)
	$(LINK) $(chkspeed_OBJECTS) $(chkspeed_LDADD) $(LIBS)
cookie_interface$(EXEEXT): $(cookie_interface_OBJECTS) $(cookie_interface_DEPENDENCIES) $(EXTRA_cookie_interface_DEPENDENCIES) 
	@rm -f cookie_interface$(EXEEXT)
	$(LINK) $(cookie_interface_OBJECTS) $(cookie_interface_LDADD) $(LIBS)
debug$(EXEEXT): $(debug_OBJECTS) $(debug_DEPENDENCIES) $(EXTRA_debug_DEPENDENCIES) 
	@rm -f debug$(EXEEXT)
	$(LINK) $(debug_OBJECTS) $(debug_LDADD) $(LIBS)
externalsocket$(EXEEXT): $(externalsocket_OBJECTS) $(externalsocket_DEPENDENCIES) $(EXTRA_externalsocket_DEPENDENCIES) 
	@rm -f externalsocket$(EXEEXT)
	$(LINK) $(externalsocket_OBJECTS) $(externalsocket_LDADD) $(LIBS)
fileupload$(EXEEXT): $(fileupload_OBJECTS) $(fileupload_DEPENDENCIES) $(EXTRA_fileupload_DEPENDENCIES) 
	@rm -f fileupload$(EXEEXT)
	$(LINK) $(fileupload_OBJECTS) $(fileupload_LDADD) $(LIBS)
fopen$(EXEEXT): $(fopen_OBJECTS) $(fopen_DEPENDENCIES) $(EXTRA_fopen_DEPENDENCIES) 
	@rm -f fopen$(EXEEXT)
	$(LINK) $(fopen_OBJECTS) $(fopen_LDADD) $(LIBS)
ftp-wildcard$(EXEEXT): $(ftp_wildcard_OBJECTS) $(ftp_wildcard_DEPENDENCIES) $(EXTRA_ftp_wildcard_DEPENDENCIES) 
	@rm -f ftp-wildcard$(EXEEXT)
	$(LINK) $(ftp_wildcard_OBJECTS) $(ftp_wildcard_LDADD) $(LIBS)
ftpget$(EXEEXT): $(ftpget_OBJECTS) $(ftpget_DEPENDENCIES) $(EXTRA_ftpget_DEPENDENCIES) 
	@rm -f ftpget$(EXEEXT)
	$(LINK) $(ftpget_OBJECTS) $(ftpget_LDADD) $(LIBS)
ftpgetinfo$(EXEEXT): $(ftpgetinfo_OBJECTS) $(ftpgetinfo_DEPENDENCIES) $(EXTRA_ftpgetinfo_DEPENDENCIES) 
	@rm -f ftpgetinfo$(EXEEXT)
	$(LINK) $(ftpgetinfo_OBJECTS) $(ftpgetinfo_LDADD) $(LIBS)
ftpgetresp$(EXEEXT): $(ftpgetresp_OBJECTS) $(ftpgetresp_DEPENDENCIES) $(EXTRA_ftpgetresp_DEPENDENCIES) 
	@rm -f ftpgetresp$(EXEEXT)
	$(LINK) $(ftpgetresp_OBJECTS) $(ftpgetresp_LDADD) $(LIBS)
ftpsget$(EXEEXT): $(ftpsget_OBJECTS) $(ftpsget_DEPENDENCIES) $(EXTRA_ftpsget_DEPENDENCIES) 
	@rm -f ftpsget$(EXEEXT)
	$(LINK) $(ftpsget_OBJECTS) $(ftpsget_LDADD) $(LIBS)
ftpupload$(EXEEXT): $(ftpupload_OBJECTS) $(ftpupload_DEPENDENCIES) $(EXTRA_ftpupload_DEPENDENCIES) 
	@rm -f ftpupload$(EXEEXT)
	$(LINK) $(ftpupload_OBJECTS) $(ftpupload_LDADD) $(LIBS)
getinfo$(EXEEXT): $(getinfo_OBJECTS) $(getinfo_DEPENDENCIES) $(EXTRA_getinfo_DEPENDENCIES) 
	@rm -f getinfo$(EXEEXT)
	$(LINK) $(getinfo_OBJECTS) $(getinfo_LDADD) $(LIBS)
getinmemory$(EXEEXT): $(getinmemory_OBJECTS) $(getinmemory_DEPENDENCIES) $(EXTRA_getinmemory_DEPENDENCIES) 
	@rm -f getinmemory$(EXEEXT)
	$(LINK) $(getinmemory_OBJECTS) $(getinmemory_LDADD) $(LIBS)
http-post$(EXEEXT): $(http_post_OBJECTS) $(http_post_DEPENDENCIES) $(EXTRA_http_post_DEPENDENCIES) 
	@rm -f http-post$(EXEEXT)
	$(LINK) $(http_post_OBJECTS) $(http_post_LDADD) $(LIBS)
httpcustomheader$(EXEEXT): $(httpcustomheader_OBJECTS) $(httpcustomheader_DEPENDENCIES) $(EXTRA_httpcustomheader_DEPENDENCIES) 
	@rm -f httpcustomheader$(EXEEXT)
	$(LINK) $(httpcustomheader_OBJECTS) $(httpcustomheader_LDADD) $(LIBS)
httpput$(EXEEXT): $(httpput_OBJECTS) $(httpput_DEPENDENCIES) $(EXTRA_httpput_DEPENDENCIES) 
	@rm -f httpput$(EXEEXT)
	$(LINK) $(httpput_OBJECTS) $(httpput_LDADD) $(LIBS)
https$(EXEEXT): $(https_OBJECTS) $(https_DEPENDENCIES) $(EXTRA_https_DEPENDENCIES) 
	@rm -f https$(EXEEXT)
	$(LINK) $(https_OBJECTS) $(https_LDADD) $(LIBS)
imap-append$(EXEEXT): $(imap_append_OBJECTS) $(imap_append_DEPENDENCIES) $(EXTRA_imap_append_DEPENDENCIES) 
	@rm -f imap-append$(EXEEXT)
	$(LINK) $(imap_append_OBJECTS) $(imap_append_LDADD) $(LIBS)
imap-copy$(EXEEXT): $(imap_copy_OBJECTS) $(imap_copy_DEPENDENCIES) $(EXTRA_imap_copy_DEPENDENCIES) 
	@rm -f imap-copy$(EXEEXT)
	$(LINK) $(imap_copy_OBJECTS) $(imap_copy_LDADD) $(LIBS)
imap-create$(EXEEXT): $(imap_create_OBJECTS) $(imap_create_DEPENDENCIES) $(EXTRA_imap_create_DEPENDENCIES) 
	@rm -f imap-create$(EXEEXT)
	$(LINK) $(imap_create_OBJECTS) $(imap_create_LDADD) $(LIBS)
imap-delete$(EXEEXT): $(imap_delete_OBJECTS) $(imap_delete_DEPENDENCIES) $(EXTRA_imap_delete_DEPENDENCIES) 
	@rm -f imap-delete$(EXEEXT)
	$(LINK) $(imap_delete_OBJECTS) $(imap_delete_LDADD) $(LIBS)
imap-examine$(EXEEXT): $(imap_examine_OBJECTS) $(imap_examine_DEPENDENCIES) $(EXTRA_imap_examine_DEPENDENCIES) 
	@rm -f imap-examine$(EXEEXT)
	$(LINK) $(imap_examine_OBJECTS) $(imap_examine_LDADD) $(LIBS)
imap-fetch$(EXEEXT): $(imap_fetch_OBJECTS) $(imap_fetch_DEPENDENCIES) $(EXTRA_imap_fetch_DEPENDENCIES) 
	@rm -f imap-fetch$(EXEEXT)
	$(LINK) $(imap_fetch_OBJECTS) $(imap_fetch_LDADD) $(LIBS)
imap-list$(EXEEXT): $(imap_list_OBJECTS) $(imap_list_DEPENDENCIES) $(EXTRA_imap_list_DEPENDENCIES) 
	@rm -f imap-list$(EXEEXT)
	$(LINK) $(imap_list_OBJECTS) $(imap_list_LDADD) $(LIBS)
imap-lsub$(EXEEXT): $(imap_lsub_OBJECTS) $(imap_lsub_DEPENDENCIES) $(EXTRA_imap_lsub_DEPENDENCIES) 
	@rm -f imap-lsub$(EXEEXT)
	$(LINK) $(imap_lsub_OBJECTS) $(imap_lsub_LDADD) $(LIBS)
imap-multi$(EXEEXT): $(imap_multi_OBJECTS) $(imap_multi_DEPENDENCIES) $(EXTRA_imap_multi_DEPENDENCIES) 
	@rm -f imap-multi$(EXEEXT)
	$(LINK) $(imap_multi_OBJECTS) $(imap_multi_LDADD) $(LIBS)
imap-noop$(EXEEXT): $(imap_noop_OBJECTS) $(imap_noop_DEPENDENCIES) $(EXTRA_imap_noop_DEPENDENCIES) 
	@rm -f imap-noop$(EXEEXT)
	$(LINK) $(imap_noop_OBJECTS) $(imap_noop_LDADD) $(LIBS)
imap-search$(EXEEXT): $(imap_search_OBJECTS) $(imap_search_DEPENDENCIES) $(EXTRA_imap_search_DEPENDENCIES) 
	@rm -f imap-search$(EXEEXT)
	$(LINK) $(imap_search_OBJECTS) $(imap_search_LDADD) $(LIBS)
imap-ssl$(EXEEXT): $(imap_ssl_OBJECTS) $(imap_ssl_DEPENDENCIES) $(EXTRA_imap_ssl_DEPENDENCIES) 
	@rm -f imap-ssl$(EXEEXT)
	$(LINK) $(imap_ssl_OBJECTS) $(imap_ssl_LDADD) $(LIBS)
imap-store$(EXEEXT): $(imap_store_OBJECTS) $(imap_store_DEPENDENCIES) $(EXTRA_imap_store_DEPENDENCIES) 
	@rm -f imap-store$(EXEEXT)
	$(LINK) $(imap_store_OBJECTS) $(imap_store_LDADD) $(LIBS)
imap-tls$(EXEEXT): $(imap_tls_OBJECTS) $(imap_tls_DEPENDENCIES) $(EXTRA_imap_tls_DEPENDENCIES) 
	@rm -f imap-tls$(EXEEXT)
	$(LINK) $(imap_tls_OBJECTS) $(imap_tls_LDADD) $(LIBS)
multi-app$(EXEEXT): $(multi_app_OBJECTS) $(multi_app_DEPENDENCIES) $(EXTRA_multi_app_DEPENDENCIES) 
	@rm -f multi-app$(EXEEXT)
	$(LINK) $(multi_app_OBJECTS) $(multi_app_LDADD) $(LIBS)
multi-debugcallback$(EXEEXT): $(multi_debugcallback_OBJECTS) $(multi_debugcallback_DEPENDENCIES) $(EXTRA_multi_debugcallback_DEPENDENCIES) 
	@rm -f multi-debugcallback$(EXEEXT)
	$(LINK) $(multi_debugcallback_OBJECTS) $(multi_debugcallback_LDADD) $(LIBS)
multi-double$(EXEEXT): $(multi_double_OBJECTS) $(multi_double_DEPENDENCIES) $(EXTRA_multi_double_DEPENDENCIES) 
	@rm -f multi-double$(EXEEXT)
	$(LINK) $(multi_double_OBJECTS) $(multi_double_LDADD) $(LIBS)
multi-post$(EXEEXT): $(multi_post_OBJECTS) $(multi_post_DEPENDENCIES) $(EXTRA_multi_post_DEPENDENCIES) 
	@rm -f multi-post$(EXEEXT)
	$(LINK) $(multi_post_OBJECTS) $(multi_post_LDADD) $(LIBS)
multi-single$(EXEEXT): $(multi_single_OBJECTS) $(multi_single_DEPENDENCIES) $(EXTRA_multi_single_DEPENDENCIES) 
	@rm -f multi-single$(EXEEXT)
	$(LINK) $(multi_single_OBJECTS) $(multi_single_LDADD) $(LIBS)
persistant$(EXEEXT): $(persistant_OBJECTS) $(persistant_DEPENDENCIES) $(EXTRA_persistant_DEPENDENCIES) 
	@rm -f persistant$(EXEEXT)
	$(LINK) $(persistant_OBJECTS) $(persistant_LDADD) $(LIBS)
pop3-dele$(EXEEXT): $(pop3_dele_OBJECTS) $(pop3_dele_DEPENDENCIES) $(EXTRA_pop3_dele_DEPENDENCIES) 
	@rm -f pop3-dele$(EXEEXT)
	$(LINK) $(pop3_dele_OBJECTS) $(pop3_dele_LDADD) $(LIBS)
pop3-list$(EXEEXT): $(pop3_list_OBJECTS) $(pop3_list_DEPENDENCIES) $(EXTRA_pop3_list_DEPENDENCIES) 
	@rm -f pop3-list$(EXEEXT)
	$(LINK) $(pop3_list_OBJECTS) $(pop3_list_LDADD) $(LIBS)
pop3-multi$(EXEEXT): $(pop3_multi_OBJECTS) $(pop3_multi_DEPENDENCIES) $(EXTRA_pop3_multi_DEPENDENCIES) 
	@rm -f pop3-multi$(EXEEXT)
	$(LINK) $(pop3_multi_OBJECTS) $(pop3_multi_LDADD) $(LIBS)
pop3-noop$(EXEEXT): $(pop3_noop_OBJECTS) $(pop3_noop_DEPENDENCIES) $(EXTRA_pop3_noop_DEPENDENCIES) 
	@rm -f pop3-noop$(EXEEXT)
	$(LINK) $(pop3_noop_OBJECTS) $(pop3_noop_LDADD) $(LIBS)
pop3-retr$(EXEEXT): $(pop3_retr_OBJECTS) $(pop3_retr_DEPENDENCIES) $(EXTRA_pop3_retr_DEPENDENCIES) 
	@rm -f pop3-retr$(EXEEXT)
	$(LINK) $(pop3_retr_OBJECTS) $(pop3_retr_LDADD) $(LIBS)
pop3-ssl$(EXEEXT): $(pop3_ssl_OBJECTS) $(pop3_ssl_DEPENDENCIES) $(EXTRA_pop3_ssl_DEPENDENCIES) 
	@rm -f pop3-ssl$(EXEEXT)
	$(LINK) $(pop3_ssl_OBJECTS) $(pop3_ssl_LDADD) $(LIBS)
pop3-stat$(EXEEXT): $(pop3_stat_OBJECTS) $(pop3_stat_DEPENDENCIES) $(EXTRA_pop3_stat_DEPENDENCIES) 
	@rm -f pop3-stat$(EXEEXT)
	$(LINK) $(pop3_stat_OBJECTS) $(pop3_stat_LDADD) $(LIBS)
pop3-tls$(EXEEXT): $(pop3_tls_OBJECTS) $(pop3_tls_DEPENDENCIES) $(EXTRA_pop3_tls_DEPENDENCIES) 
	@rm -f pop3-tls$(EXEEXT)
	$(LINK) $(pop3_tls_OBJECTS) $(pop3_tls_LDADD) $(LIBS)
pop3-top$(EXEEXT): $(pop3_top_OBJECTS) $(pop3_top_DEPENDENCIES) $(EXTRA_pop3_top_DEPENDENCIES) 
	@rm -f pop3-top$(EXEEXT)
	$(LINK) $(pop3_top_OBJECTS) $(pop3_top_LDADD) $(LIBS)
pop3-uidl$(EXEEXT): $(pop3_uidl_OBJECTS) $(pop3_uidl_DEPENDENCIES) $(EXTRA_pop3_uidl_DEPENDENCIES) 
	@rm -f pop3-uidl$(EXEEXT)
	$(LINK) $(pop3_uidl_OBJECTS) $(pop3_uidl_LDADD) $(LIBS)
post-callback$(EXEEXT): $(post_callback_OBJECTS) $(post_callback_DEPENDENCIES) $(EXTRA_post_callback_DEPENDENCIES) 
	@rm -f post-callback$(EXEEXT)
	$(LINK) $(post_callback_OBJECTS) $(post_callback_LDADD) $(LIBS)
postinmemory$(EXEEXT): $(postinmemory_OBJECTS) $(postinmemory_DEPENDENCIES) $(EXTRA_postinmemory_DEPENDENCIES) 
	@rm -f postinmemory$(EXEEXT)
	$(LINK) $(postinmemory_OBJECTS) $(postinmemory_LDADD) $(LIBS)
postit2$(EXEEXT): $(postit2_OBJECTS) $(postit2_DEPENDENCIES) $(EXTRA_postit2_DEPENDENCIES) 
	@rm -f postit2$(EXEEXT)
	$(LINK) $(postit2_OBJECTS) $(postit2_LDADD) $(LIBS)
progressfunc$(EXEEXT): $(progressfunc_OBJECTS) $(progressfunc_DEPENDENCIES) $(EXTRA_progressfunc_DEPENDENCIES) 
	@rm -f progressfunc$(EXEEXT)
	$(LINK) $(progressfunc_OBJECTS) $(progressfunc_LDADD) $(LIBS)
resolve$(EXEEXT): $(resolve_OBJECTS) $(resolve_DEPENDENCIES) $(EXTRA_resolve_DEPENDENCIES) 
	@rm -f resolve$(EXEEXT)
	$(LINK) $(resolve_OBJECTS) $(resolve_LDADD) $(LIBS)
rtsp$(EXEEXT): $(rtsp_OBJECTS) $(rtsp_DEPENDENCIES) $(EXTRA_rtsp_DEPENDENCIES) 
	@rm -f rtsp$(EXEEXT)
	$(LINK) $(rtsp_OBJECTS) $(rtsp_LDADD) $(LIBS)
sendrecv$(EXEEXT): $(sendrecv_OBJECTS) $(sendrecv_DEPENDENCIES) $(EXTRA_sendrecv_DEPENDENCIES) 
	@rm -f sendrecv$(EXEEXT)
	$(LINK) $(sendrecv_OBJECTS) $(sendrecv_LDADD) $(LIBS)
sepheaders$(EXEEXT): $(sepheaders_OBJECTS) $(sepheaders_DEPENDENCIES) $(EXTRA_sepheaders_DEPENDENCIES) 
	@rm -f sepheaders$(EXEEXT)
	$(LINK) $(sepheaders_OBJECTS) $(sepheaders_LDADD) $(LIBS)
sftpget$(EXEEXT): $(sftpget_OBJECTS) $(sftpget_DEPENDENCIES) $(EXTRA_sftpget_DEPENDENCIES) 
	@rm -f sftpget$(EXEEXT)
	$(LINK) $(sftpget_OBJECTS) $(sftpget_LDADD) $(LIBS)
simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES) $(EXTRA_simple_DEPENDENCIES) 
	@rm -f simple$(EXEEXT)
	$(LINK) $(simple_OBJECTS) $(simple_LDADD) $(LIBS)
simplepost$(EXEEXT): $(simplepost_OBJECTS) $(simplepost_DEPENDENCIES) $(EXTRA_simplepost_DEPENDENCIES) 
	@rm -f simplepost$(EXEEXT)
	$(LINK) $(simplepost_OBJECTS) $(simplepost_LDADD) $(LIBS)
simplessl$(EXEEXT): $(simplessl_OBJECTS) $(simplessl_DEPENDENCIES) $(EXTRA_simplessl_DEPENDENCIES) 
	@rm -f simplessl$(EXEEXT)
	$(LINK) $(simplessl_OBJECTS) $(simplessl_LDADD) $(LIBS)
smtp-expn$(EXEEXT): $(smtp_expn_OBJECTS) $(smtp_expn_DEPENDENCIES) $(EXTRA_smtp_expn_DEPENDENCIES) 
	@rm -f smtp-expn$(EXEEXT)
	$(LINK) $(smtp_expn_OBJECTS) $(smtp_expn_LDADD) $(LIBS)
smtp-mail$(EXEEXT): $(smtp_mail_OBJECTS) $(smtp_mail_DEPENDENCIES) $(EXTRA_smtp_mail_DEPENDENCIES) 
	@rm -f smtp-mail$(EXEEXT)
	$(LINK) $(smtp_mail_OBJECTS) $(smtp_mail_LDADD) $(LIBS)
smtp-multi$(EXEEXT): $(smtp_multi_OBJECTS) $(smtp_multi_DEPENDENCIES) $(EXTRA_smtp_multi_DEPENDENCIES) 
	@rm -f smtp-multi$(EXEEXT)
	$(LINK) $(smtp_multi_OBJECTS) $(smtp_multi_LDADD) $(LIBS)
smtp-ssl$(EXEEXT): $(smtp_ssl_OBJECTS) $(smtp_ssl_DEPENDENCIES) $(EXTRA_smtp_ssl_DEPENDENCIES) 
	@rm -f smtp-ssl$(EXEEXT)
	$(LINK) $(smtp_ssl_OBJECTS) $(smtp_ssl_LDADD) $(LIBS)
smtp-tls$(EXEEXT): $(smtp_tls_OBJECTS) $(smtp_tls_DEPENDENCIES) $(EXTRA_smtp_tls_DEPENDENCIES) 
	@rm -f smtp-tls$(EXEEXT)
	$(LINK) $(smtp_tls_OBJECTS) $(smtp_tls_LDADD) $(LIBS)
smtp-vrfy$(EXEEXT): $(smtp_vrfy_OBJECTS) $(smtp_vrfy_DEPENDENCIES) $(EXTRA_smtp_vrfy_DEPENDENCIES) 
	@rm -f smtp-vrfy$(EXEEXT)
	$(LINK) $(smtp_vrfy_OBJECTS) $(smtp_vrfy_LDADD) $(LIBS)
url2file$(EXEEXT): $(url2file_OBJECTS) $(url2file_DEPENDENCIES) $(EXTRA_url2file_DEPENDENCIES) 
	@rm -f url2file$(EXEEXT)
	$(LINK) $(url2file_OBJECTS) $(url2file_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/10-at-a-time.Po
include ./$(DEPDIR)/anyauthput.Po
include ./$(DEPDIR)/certinfo.Po
include ./$(DEPDIR)/chkspeed.Po
include ./$(DEPDIR)/cookie_interface.Po
include ./$(DEPDIR)/debug.Po
include ./$(DEPDIR)/externalsocket.Po
include ./$(DEPDIR)/fileupload.Po
include ./$(DEPDIR)/fopen.Po
include ./$(DEPDIR)/ftp-wildcard.Po
include ./$(DEPDIR)/ftpget.Po
include ./$(DEPDIR)/ftpgetinfo.Po
include ./$(DEPDIR)/ftpgetresp.Po
include ./$(DEPDIR)/ftpsget.Po
include ./$(DEPDIR)/ftpupload.Po
include ./$(DEPDIR)/getinfo.Po
include ./$(DEPDIR)/getinmemory.Po
include ./$(DEPDIR)/http-post.Po
include ./$(DEPDIR)/httpcustomheader.Po
include ./$(DEPDIR)/httpput.Po
include ./$(DEPDIR)/https.Po
include ./$(DEPDIR)/imap-append.Po
include ./$(DEPDIR)/imap-copy.Po
include ./$(DEPDIR)/imap-create.Po
include ./$(DEPDIR)/imap-delete.Po
include ./$(DEPDIR)/imap-examine.Po
include ./$(DEPDIR)/imap-fetch.Po
include ./$(DEPDIR)/imap-list.Po
include ./$(DEPDIR)/imap-lsub.Po
include ./$(DEPDIR)/imap-multi.Po
include ./$(DEPDIR)/imap-noop.Po
include ./$(DEPDIR)/imap-search.Po
include ./$(DEPDIR)/imap-ssl.Po
include ./$(DEPDIR)/imap-store.Po
include ./$(DEPDIR)/imap-tls.Po
include ./$(DEPDIR)/multi-app.Po
include ./$(DEPDIR)/multi-debugcallback.Po
include ./$(DEPDIR)/multi-double.Po
include ./$(DEPDIR)/multi-post.Po
include ./$(DEPDIR)/multi-single.Po
include ./$(DEPDIR)/persistant.Po
include ./$(DEPDIR)/pop3-dele.Po
include ./$(DEPDIR)/pop3-list.Po
include ./$(DEPDIR)/pop3-multi.Po
include ./$(DEPDIR)/pop3-noop.Po
include ./$(DEPDIR)/pop3-retr.Po
include ./$(DEPDIR)/pop3-ssl.Po
include ./$(DEPDIR)/pop3-stat.Po
include ./$(DEPDIR)/pop3-tls.Po
include ./$(DEPDIR)/pop3-top.Po
include ./$(DEPDIR)/pop3-uidl.Po
include ./$(DEPDIR)/post-callback.Po
include ./$(DEPDIR)/postinmemory.Po
include ./$(DEPDIR)/postit2.Po
include ./$(DEPDIR)/progressfunc.Po
include ./$(DEPDIR)/resolve.Po
include ./$(DEPDIR)/rtsp.Po
include ./$(DEPDIR)/sendrecv.Po
include ./$(DEPDIR)/sepheaders.Po
include ./$(DEPDIR)/sftpget.Po
include ./$(DEPDIR)/simple.Po
include ./$(DEPDIR)/simplepost.Po
include ./$(DEPDIR)/simplessl.Po
include ./$(DEPDIR)/smtp-expn.Po
include ./$(DEPDIR)/smtp-mail.Po
include ./$(DEPDIR)/smtp-multi.Po
include ./$(DEPDIR)/smtp-ssl.Po
include ./$(DEPDIR)/smtp-tls.Po
include ./$(DEPDIR)/smtp-vrfy.Po
include ./$(DEPDIR)/url2file.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


# Makefile.inc provides the check_PROGRAMS and COMPLICATED_EXAMPLES defines

all: $(check_PROGRAMS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

# Makefile.in generated by automake 1.11.6 from Makefile.am.
# tests/mpz/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright 1996, 1997, 1999-2003, 2009, 2012 Free Software Foundation, Inc.
#
# This file is part of the GNU MP Library test suite.
#
# The GNU MP Library test suite is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3 of the License,
# or (at your option) any later version.
#
# The GNU MP Library test suite is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# the GNU MP Library test suite.  If not, see https://www.gnu.org/licenses/.

am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/gmp
pkgincludedir = $(includedir)/gmp
pkglibdir = $(libdir)/gmp
pkglibexecdir = $(libexecdir)/gmp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = mips-rlx5281-linux-gnu
check_PROGRAMS = t-addsub$(EXEEXT) t-cmp$(EXEEXT) t-mul$(EXEEXT) \
	t-mul_i$(EXEEXT) t-tdiv$(EXEEXT) t-tdiv_ui$(EXEEXT) \
	t-fdiv$(EXEEXT) t-fdiv_ui$(EXEEXT) t-cdiv_ui$(EXEEXT) \
	t-gcd$(EXEEXT) t-gcd_ui$(EXEEXT) t-lcm$(EXEEXT) \
	t-invert$(EXEEXT) dive$(EXEEXT) dive_ui$(EXEEXT) \
	t-sqrtrem$(EXEEXT) convert$(EXEEXT) io$(EXEEXT) \
	t-inp_str$(EXEEXT) logic$(EXEEXT) bit$(EXEEXT) t-powm$(EXEEXT) \
	t-powm_ui$(EXEEXT) t-pow$(EXEEXT) t-div_2exp$(EXEEXT) \
	reuse$(EXEEXT) t-root$(EXEEXT) t-perfsqr$(EXEEXT) \
	t-perfpow$(EXEEXT) t-jac$(EXEEXT) t-bin$(EXEEXT) \
	t-get_d$(EXEEXT) t-get_d_2exp$(EXEEXT) t-get_si$(EXEEXT) \
	t-set_d$(EXEEXT) t-set_si$(EXEEXT) t-fac_ui$(EXEEXT) \
	t-mfac_uiui$(EXEEXT) t-primorial_ui$(EXEEXT) t-fib_ui$(EXEEXT) \
	t-lucnum_ui$(EXEEXT) t-scan$(EXEEXT) t-fits$(EXEEXT) \
	t-divis$(EXEEXT) t-divis_2exp$(EXEEXT) t-cong$(EXEEXT) \
	t-cong_2exp$(EXEEXT) t-sizeinbase$(EXEEXT) t-set_str$(EXEEXT) \
	t-aorsmul$(EXEEXT) t-cmp_d$(EXEEXT) t-cmp_si$(EXEEXT) \
	t-hamdist$(EXEEXT) t-oddeven$(EXEEXT) t-popcount$(EXEEXT) \
	t-set_f$(EXEEXT) t-io_raw$(EXEEXT) t-import$(EXEEXT) \
	t-export$(EXEEXT) t-pprime_p$(EXEEXT) t-nextprime$(EXEEXT) \
	t-remove$(EXEEXT) t-limbs$(EXEEXT)
subdir = tests/mpz
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
bit_SOURCES = bit.c
bit_OBJECTS = bit.$(OBJEXT)
bit_LDADD = $(LDADD)
bit_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
convert_SOURCES = convert.c
convert_OBJECTS = convert.$(OBJEXT)
convert_LDADD = $(LDADD)
convert_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
dive_SOURCES = dive.c
dive_OBJECTS = dive.$(OBJEXT)
dive_LDADD = $(LDADD)
dive_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
dive_ui_SOURCES = dive_ui.c
dive_ui_OBJECTS = dive_ui.$(OBJEXT)
dive_ui_LDADD = $(LDADD)
dive_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
io_SOURCES = io.c
io_OBJECTS = io.$(OBJEXT)
io_LDADD = $(LDADD)
io_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
logic_SOURCES = logic.c
logic_OBJECTS = logic.$(OBJEXT)
logic_LDADD = $(LDADD)
logic_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
reuse_SOURCES = reuse.c
reuse_OBJECTS = reuse.$(OBJEXT)
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_addsub_SOURCES = t-addsub.c
t_addsub_OBJECTS = t-addsub.$(OBJEXT)
t_addsub_LDADD = $(LDADD)
t_addsub_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_aorsmul_SOURCES = t-aorsmul.c
t_aorsmul_OBJECTS = t-aorsmul.$(OBJEXT)
t_aorsmul_LDADD = $(LDADD)
t_aorsmul_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_bin_SOURCES = t-bin.c
t_bin_OBJECTS = t-bin.$(OBJEXT)
t_bin_LDADD = $(LDADD)
t_bin_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_cdiv_ui_SOURCES = t-cdiv_ui.c
t_cdiv_ui_OBJECTS = t-cdiv_ui.$(OBJEXT)
t_cdiv_ui_LDADD = $(LDADD)
t_cdiv_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_cmp_SOURCES = t-cmp.c
t_cmp_OBJECTS = t-cmp.$(OBJEXT)
t_cmp_LDADD = $(LDADD)
t_cmp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_cmp_d_SOURCES = t-cmp_d.c
t_cmp_d_OBJECTS = t-cmp_d.$(OBJEXT)
t_cmp_d_LDADD = $(LDADD)
t_cmp_d_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_cmp_si_SOURCES = t-cmp_si.c
t_cmp_si_OBJECTS = t-cmp_si.$(OBJEXT)
t_cmp_si_LDADD = $(LDADD)
t_cmp_si_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_cong_SOURCES = t-cong.c
t_cong_OBJECTS = t-cong.$(OBJEXT)
t_cong_LDADD = $(LDADD)
t_cong_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_cong_2exp_SOURCES = t-cong_2exp.c
t_cong_2exp_OBJECTS = t-cong_2exp.$(OBJEXT)
t_cong_2exp_LDADD = $(LDADD)
t_cong_2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_div_2exp_SOURCES = t-div_2exp.c
t_div_2exp_OBJECTS = t-div_2exp.$(OBJEXT)
t_div_2exp_LDADD = $(LDADD)
t_div_2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_divis_SOURCES = t-divis.c
t_divis_OBJECTS = t-divis.$(OBJEXT)
t_divis_LDADD = $(LDADD)
t_divis_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_divis_2exp_SOURCES = t-divis_2exp.c
t_divis_2exp_OBJECTS = t-divis_2exp.$(OBJEXT)
t_divis_2exp_LDADD = $(LDADD)
t_divis_2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_export_SOURCES = t-export.c
t_export_OBJECTS = t-export.$(OBJEXT)
t_export_LDADD = $(LDADD)
t_export_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_fac_ui_SOURCES = t-fac_ui.c
t_fac_ui_OBJECTS = t-fac_ui.$(OBJEXT)
t_fac_ui_LDADD = $(LDADD)
t_fac_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_fdiv_SOURCES = t-fdiv.c
t_fdiv_OBJECTS = t-fdiv.$(OBJEXT)
t_fdiv_LDADD = $(LDADD)
t_fdiv_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_fdiv_ui_SOURCES = t-fdiv_ui.c
t_fdiv_ui_OBJECTS = t-fdiv_ui.$(OBJEXT)
t_fdiv_ui_LDADD = $(LDADD)
t_fdiv_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_fib_ui_SOURCES = t-fib_ui.c
t_fib_ui_OBJECTS = t-fib_ui.$(OBJEXT)
t_fib_ui_LDADD = $(LDADD)
t_fib_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_fits_SOURCES = t-fits.c
t_fits_OBJECTS = t-fits.$(OBJEXT)
t_fits_LDADD = $(LDADD)
t_fits_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_gcd_SOURCES = t-gcd.c
t_gcd_OBJECTS = t-gcd.$(OBJEXT)
t_gcd_LDADD = $(LDADD)
t_gcd_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_gcd_ui_SOURCES = t-gcd_ui.c
t_gcd_ui_OBJECTS = t-gcd_ui.$(OBJEXT)
t_gcd_ui_LDADD = $(LDADD)
t_gcd_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_get_d_SOURCES = t-get_d.c
t_get_d_OBJECTS = t-get_d.$(OBJEXT)
t_get_d_LDADD = $(LDADD)
t_get_d_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_get_d_2exp_SOURCES = t-get_d_2exp.c
t_get_d_2exp_OBJECTS = t-get_d_2exp.$(OBJEXT)
t_get_d_2exp_LDADD = $(LDADD)
t_get_d_2exp_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_get_si_SOURCES = t-get_si.c
t_get_si_OBJECTS = t-get_si.$(OBJEXT)
t_get_si_LDADD = $(LDADD)
t_get_si_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_hamdist_SOURCES = t-hamdist.c
t_hamdist_OBJECTS = t-hamdist.$(OBJEXT)
t_hamdist_LDADD = $(LDADD)
t_hamdist_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_import_SOURCES = t-import.c
t_import_OBJECTS = t-import.$(OBJEXT)
t_import_LDADD = $(LDADD)
t_import_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_inp_str_SOURCES = t-inp_str.c
t_inp_str_OBJECTS = t-inp_str.$(OBJEXT)
t_inp_str_LDADD = $(LDADD)
t_inp_str_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_invert_SOURCES = t-invert.c
t_invert_OBJECTS = t-invert.$(OBJEXT)
t_invert_LDADD = $(LDADD)
t_invert_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_io_raw_SOURCES = t-io_raw.c
t_io_raw_OBJECTS = t-io_raw.$(OBJEXT)
t_io_raw_LDADD = $(LDADD)
t_io_raw_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_jac_SOURCES = t-jac.c
t_jac_OBJECTS = t-jac.$(OBJEXT)
t_jac_LDADD = $(LDADD)
t_jac_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_lcm_SOURCES = t-lcm.c
t_lcm_OBJECTS = t-lcm.$(OBJEXT)
t_lcm_LDADD = $(LDADD)
t_lcm_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_limbs_SOURCES = t-limbs.c
t_limbs_OBJECTS = t-limbs.$(OBJEXT)
t_limbs_LDADD = $(LDADD)
t_limbs_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_lucnum_ui_SOURCES = t-lucnum_ui.c
t_lucnum_ui_OBJECTS = t-lucnum_ui.$(OBJEXT)
t_lucnum_ui_LDADD = $(LDADD)
t_lucnum_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_mfac_uiui_SOURCES = t-mfac_uiui.c
t_mfac_uiui_OBJECTS = t-mfac_uiui.$(OBJEXT)
t_mfac_uiui_LDADD = $(LDADD)
t_mfac_uiui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_mul_SOURCES = t-mul.c
t_mul_OBJECTS = t-mul.$(OBJEXT)
t_mul_LDADD = $(LDADD)
t_mul_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_mul_i_SOURCES = t-mul_i.c
t_mul_i_OBJECTS = t-mul_i.$(OBJEXT)
t_mul_i_LDADD = $(LDADD)
t_mul_i_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_nextprime_SOURCES = t-nextprime.c
t_nextprime_OBJECTS = t-nextprime.$(OBJEXT)
t_nextprime_LDADD = $(LDADD)
t_nextprime_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_oddeven_SOURCES = t-oddeven.c
t_oddeven_OBJECTS = t-oddeven.$(OBJEXT)
t_oddeven_LDADD = $(LDADD)
t_oddeven_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_perfpow_SOURCES = t-perfpow.c
t_perfpow_OBJECTS = t-perfpow.$(OBJEXT)
t_perfpow_LDADD = $(LDADD)
t_perfpow_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_perfsqr_SOURCES = t-perfsqr.c
t_perfsqr_OBJECTS = t-perfsqr.$(OBJEXT)
t_perfsqr_LDADD = $(LDADD)
t_perfsqr_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_popcount_SOURCES = t-popcount.c
t_popcount_OBJECTS = t-popcount.$(OBJEXT)
t_popcount_LDADD = $(LDADD)
t_popcount_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_pow_SOURCES = t-pow.c
t_pow_OBJECTS = t-pow.$(OBJEXT)
t_pow_LDADD = $(LDADD)
t_pow_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_powm_SOURCES = t-powm.c
t_powm_OBJECTS = t-powm.$(OBJEXT)
t_powm_LDADD = $(LDADD)
t_powm_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_powm_ui_SOURCES = t-powm_ui.c
t_powm_ui_OBJECTS = t-powm_ui.$(OBJEXT)
t_powm_ui_LDADD = $(LDADD)
t_powm_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_pprime_p_SOURCES = t-pprime_p.c
t_pprime_p_OBJECTS = t-pprime_p.$(OBJEXT)
t_pprime_p_LDADD = $(LDADD)
t_pprime_p_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_primorial_ui_SOURCES = t-primorial_ui.c
t_primorial_ui_OBJECTS = t-primorial_ui.$(OBJEXT)
t_primorial_ui_LDADD = $(LDADD)
t_primorial_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_remove_SOURCES = t-remove.c
t_remove_OBJECTS = t-remove.$(OBJEXT)
t_remove_LDADD = $(LDADD)
t_remove_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_root_SOURCES = t-root.c
t_root_OBJECTS = t-root.$(OBJEXT)
t_root_LDADD = $(LDADD)
t_root_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_scan_SOURCES = t-scan.c
t_scan_OBJECTS = t-scan.$(OBJEXT)
t_scan_LDADD = $(LDADD)
t_scan_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_set_d_SOURCES = t-set_d.c
t_set_d_OBJECTS = t-set_d.$(OBJEXT)
t_set_d_LDADD = $(LDADD)
t_set_d_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_set_f_SOURCES = t-set_f.c
t_set_f_OBJECTS = t-set_f.$(OBJEXT)
t_set_f_LDADD = $(LDADD)
t_set_f_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_set_si_SOURCES = t-set_si.c
t_set_si_OBJECTS = t-set_si.$(OBJEXT)
t_set_si_LDADD = $(LDADD)
t_set_si_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_set_str_SOURCES = t-set_str.c
t_set_str_OBJECTS = t-set_str.$(OBJEXT)
t_set_str_LDADD = $(LDADD)
t_set_str_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_sizeinbase_SOURCES = t-sizeinbase.c
t_sizeinbase_OBJECTS = t-sizeinbase.$(OBJEXT)
t_sizeinbase_LDADD = $(LDADD)
t_sizeinbase_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_sqrtrem_SOURCES = t-sqrtrem.c
t_sqrtrem_OBJECTS = t-sqrtrem.$(OBJEXT)
t_sqrtrem_LDADD = $(LDADD)
t_sqrtrem_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_tdiv_SOURCES = t-tdiv.c
t_tdiv_OBJECTS = t-tdiv.$(OBJEXT)
t_tdiv_LDADD = $(LDADD)
t_tdiv_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
t_tdiv_ui_SOURCES = t-tdiv_ui.c
t_tdiv_ui_OBJECTS = t-tdiv_ui.$(OBJEXT)
t_tdiv_ui_LDADD = $(LDADD)
t_tdiv_ui_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
	$(top_builddir)/libgmp.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = bit.c convert.c dive.c dive_ui.c io.c logic.c reuse.c \
	t-addsub.c t-aorsmul.c t-bin.c t-cdiv_ui.c t-cmp.c t-cmp_d.c \
	t-cmp_si.c t-cong.c t-cong_2exp.c t-div_2exp.c t-divis.c \
	t-divis_2exp.c t-export.c t-fac_ui.c t-fdiv.c t-fdiv_ui.c \
	t-fib_ui.c t-fits.c t-gcd.c t-gcd_ui.c t-get_d.c \
	t-get_d_2exp.c t-get_si.c t-hamdist.c t-import.c t-inp_str.c \
	t-invert.c t-io_raw.c t-jac.c t-lcm.c t-limbs.c t-lucnum_ui.c \
	t-mfac_uiui.c t-mul.c t-mul_i.c t-nextprime.c t-oddeven.c \
	t-perfpow.c t-perfsqr.c t-popcount.c t-pow.c t-powm.c \
	t-powm_ui.c t-pprime_p.c t-primorial_ui.c t-remove.c t-root.c \
	t-scan.c t-set_d.c t-set_f.c t-set_si.c t-set_str.c \
	t-sizeinbase.c t-sqrtrem.c t-tdiv.c t-tdiv_ui.c
DIST_SOURCES = bit.c convert.c dive.c dive_ui.c io.c logic.c reuse.c \
	t-addsub.c t-aorsmul.c t-bin.c t-cdiv_ui.c t-cmp.c t-cmp_d.c \
	t-cmp_si.c t-cong.c t-cong_2exp.c t-div_2exp.c t-divis.c \
	t-divis_2exp.c t-export.c t-fac_ui.c t-fdiv.c t-fdiv_ui.c \
	t-fib_ui.c t-fits.c t-gcd.c t-gcd_ui.c t-get_d.c \
	t-get_d_2exp.c t-get_si.c t-hamdist.c t-import.c t-inp_str.c \
	t-invert.c t-io_raw.c t-jac.c t-lcm.c t-limbs.c t-lucnum_ui.c \
	t-mfac_uiui.c t-mul.c t-mul_i.c t-nextprime.c t-oddeven.c \
	t-perfpow.c t-perfsqr.c t-popcount.c t-pow.c t-powm.c \
	t-powm_ui.c t-pprime_p.c t-primorial_ui.c t-remove.c t-root.c \
	t-scan.c t-set_d.c t-set_f.c t-set_si.c t-set_str.c \
	t-sizeinbase.c t-sqrtrem.c t-tdiv.c t-tdiv_ui.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI = o32
ACLOCAL = ${SHELL} /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = rsdk-linux-ar
AS = rsdk-linux-gcc -c -Os -pipe -march=5281 -fno-caller-saves -fpic
ASMFLAGS = 
AUTOCONF = ${SHELL} /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0/missing --run automake-1.11
AWK = gawk
CALLING_CONVENTIONS_OBJS = 
CC = rsdk-linux-gcc -std=gnu99
CCAS = rsdk-linux-gcc -std=gnu99 -c
CC_FOR_BUILD = cc
CFLAGS = -Os -pipe -march=5281 -fno-caller-saves -fpic 
CPP = rsdk-linux-gcc -std=gnu99 -E
CPPFLAGS = -I/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/usr/include -I/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/include -I/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/rsdk-4.6.4-5281-EB-3.10-0.9.33-m32ub-20141001//include 
CPP_FOR_BUILD = cc -E
CXX = rsdk-linux-g++
CXXCPP = rsdk-linux-g++ -E
CXXFLAGS = -Os -pipe -march=5281 -fno-caller-saves -fpic 
CYGPATH_W = echo
DEFN_LONG_LONG_LIMB = /* #undef _LONG_LONG_LIMB */
DEFS = -DHAVE_CONFIG_H
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/host/bin/grep -E
EXEEXT = 
EXEEXT_FOR_BUILD = 
FGREP = /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/host/bin/grep -F
GMP_LDFLAGS = 
GMP_LIMB_BITS = 32
GMP_NAIL_BITS = 0
GREP = /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/host/bin/grep
HAVE_CLOCK_01 = 1
HAVE_CPUTIME_01 = 0
HAVE_GETRUSAGE_01 = 1
HAVE_GETTIMEOFDAY_01 = 1
HAVE_HOST_CPU_FAMILY_power = 0
HAVE_HOST_CPU_FAMILY_powerpc = 0
HAVE_SIGACTION_01 = 1
HAVE_SIGALTSTACK_01 = 1
HAVE_SIGSTACK_01 = 0
HAVE_STACK_T_01 = 1
HAVE_SYS_RESOURCE_H_01 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = rsdk-linux-ld
LDFLAGS = -L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/usr/lib -L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/target-mips-rlx5281-linux/lib -L/home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/rsdk-4.6.4-5281-EB-3.10-0.9.33-m32ub-20141001//lib 
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBCURSES = 
LIBGMPXX_LDFLAGS = 
LIBGMP_DLL = 0
LIBGMP_LDFLAGS = 
LIBM = -lm
LIBM_FOR_BUILD = -lm
LIBOBJS = 
LIBREADLINE = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
M4 = /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/host/bin/m4
MAINT = #
MAKEINFO = ${SHELL} /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = rsdk-linux-nm
NMEDIT = 
OBJDUMP = rsdk-linux-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = gmp
PACKAGE_BUGREPORT = gmp-bugs@gmplib.org, see https://gmplib.org/manual/Reporting-Bugs.html
PACKAGE_NAME = GNU MP
PACKAGE_STRING = GNU MP 6.0.0
PACKAGE_TARNAME = gmp
PACKAGE_URL = http://www.gnu.org/software/gmp/
PACKAGE_VERSION = 6.0.0
PATH_SEPARATOR = :
RANLIB = rsdk-linux-ranlib
SED = /home/svm/openwrt_rtk/rtk_openwrt_sdk/staging_dir/host/bin/sed
SET_MAKE = 
SHELL = /bin/bash
SPEED_CYCLECOUNTER_OBJ = 
STRIP = rsdk-linux-strip
TAL_OBJECT = tal-reent.lo
TUNE_LIBS = 
TUNE_SQR_OBJ = 
U_FOR_BUILD = 
VERSION = 6.0.0
WITH_READLINE_01 = 0
YACC = bison -y
YFLAGS = 
abs_builddir = /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0/tests/mpz
abs_srcdir = /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0/tests/mpz
abs_top_builddir = /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0
abs_top_srcdir = /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__leading_dot = .
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = /usr/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
gmp_srclinks =  mpn/add.c mpn/add_1.c mpn/add_n.asm mpn/sub.c mpn/sub_1.c mpn/sub_n.asm mpn/cnd_add_n.c mpn/cnd_sub_n.c mpn/neg.c mpn/com.c mpn/mul_1.asm mpn/addmul_1.asm mpn/submul_1.asm mpn/add_err1_n.c mpn/add_err2_n.c mpn/add_err3_n.c mpn/sub_err1_n.c mpn/sub_err2_n.c mpn/sub_err3_n.c mpn/lshift.asm mpn/rshift.asm mpn/dive_1.c mpn/diveby3.c mpn/divis.c mpn/divrem.c mpn/divrem_1.c mpn/divrem_2.c mpn/fib2_ui.c mpn/mod_1.c mpn/mod_34lsub1.c mpn/mode1o.c mpn/pre_divrem_1.c mpn/pre_mod_1.c mpn/dump.c mpn/mod_1_1.c mpn/mod_1_2.c mpn/mod_1_3.c mpn/mod_1_4.c mpn/lshiftc.c mpn/mul.c mpn/mul_fft.c mpn/mul_n.c mpn/sqr.c mpn/mul_basecase.c mpn/sqr_basecase.c mpn/nussbaumer_mul.c mpn/mulmid_basecase.c mpn/toom42_mulmid.c mpn/mulmid_n.c mpn/mulmid.c mpn/random.c mpn/random2.c mpn/pow_1.c mpn/rootrem.c mpn/sqrtrem.c mpn/sizeinbase.c mpn/get_str.c mpn/set_str.c mpn/scan0.c mpn/scan1.c mpn/popcount.c mpn/hamdist.c mpn/cmp.c mpn/perfsqr.c mpn/perfpow.c mpn/gcd_1.c mpn/gcd.c mpn/gcdext_1.c mpn/gcdext.c mpn/gcd_subdiv_step.c mpn/gcdext_lehmer.c mpn/div_q.c mpn/tdiv_qr.c mpn/jacbase.c mpn/jacobi_2.c mpn/jacobi.c mpn/get_d.c mpn/matrix22_mul.c mpn/matrix22_mul1_inverse_vector.c mpn/hgcd_matrix.c mpn/hgcd2.c mpn/hgcd_step.c mpn/hgcd_reduce.c mpn/hgcd.c mpn/hgcd_appr.c mpn/hgcd2_jacobi.c mpn/hgcd_jacobi.c mpn/mullo_n.c mpn/mullo_basecase.c mpn/toom22_mul.c mpn/toom32_mul.c mpn/toom42_mul.c mpn/toom52_mul.c mpn/toom62_mul.c mpn/toom33_mul.c mpn/toom43_mul.c mpn/toom53_mul.c mpn/toom54_mul.c mpn/toom63_mul.c mpn/toom44_mul.c mpn/toom6h_mul.c mpn/toom6_sqr.c mpn/toom8h_mul.c mpn/toom8_sqr.c mpn/toom_couple_handling.c mpn/toom2_sqr.c mpn/toom3_sqr.c mpn/toom4_sqr.c mpn/toom_eval_dgr3_pm1.c mpn/toom_eval_dgr3_pm2.c mpn/toom_eval_pm1.c mpn/toom_eval_pm2.c mpn/toom_eval_pm2exp.c mpn/toom_eval_pm2rexp.c mpn/toom_interpolate_5pts.c mpn/toom_interpolate_6pts.c mpn/toom_interpolate_7pts.c mpn/toom_interpolate_8pts.c mpn/toom_interpolate_12pts.c mpn/toom_interpolate_16pts.c mpn/invertappr.c mpn/invert.c mpn/binvert.c mpn/mulmod_bnm1.c mpn/sqrmod_bnm1.c mpn/div_qr_1.c mpn/div_qr_1n_pi1.c mpn/div_qr_2.c mpn/div_qr_2n_pi1.c mpn/div_qr_2u_pi1.c mpn/sbpi1_div_q.c mpn/sbpi1_div_qr.c mpn/sbpi1_divappr_q.c mpn/dcpi1_div_q.c mpn/dcpi1_div_qr.c mpn/dcpi1_divappr_q.c mpn/mu_div_qr.c mpn/mu_divappr_q.c mpn/mu_div_q.c mpn/bdiv_q_1.c mpn/sbpi1_bdiv_q.c mpn/sbpi1_bdiv_qr.c mpn/dcpi1_bdiv_q.c mpn/dcpi1_bdiv_qr.c mpn/mu_bdiv_q.c mpn/mu_bdiv_qr.c mpn/bdiv_q.c mpn/bdiv_qr.c mpn/broot.c mpn/brootinv.c mpn/bsqrt.c mpn/bsqrtinv.c mpn/divexact.c mpn/bdiv_dbm1c.c mpn/redc_1.c mpn/redc_2.c mpn/redc_n.c mpn/powm.c mpn/powlo.c mpn/sec_powm.c mpn/sec_mul.c mpn/sec_sqr.c mpn/sec_div_qr.c mpn/sec_div_r.c mpn/sec_pi1_div_qr.c mpn/sec_pi1_div_r.c mpn/sec_add_1.c mpn/sec_sub_1.c mpn/sec_invert.c mpn/trialdiv.c mpn/remove.c mpn/and_n.c mpn/andn_n.c mpn/nand_n.c mpn/ior_n.c mpn/iorn_n.c mpn/nior_n.c mpn/xor_n.c mpn/xnor_n.c mpn/copyi.c mpn/copyd.c mpn/zero.c mpn/sec_tabselect.c mpn/comb_tables.c mpn/umul.asm mpn/add_n_sub_n.c gmp-mparam.h
host = mips-rlx5281-linux-gnu
host_alias = mips-rlx5281-linux
host_cpu = mips
host_os = linux-gnu
host_vendor = rlx5281
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = /usr/info
install_sh = ${SHELL} /home/svm/openwrt_rtk/rtk_openwrt_sdk/build_dir/target-mips-rlx5281-linux/gmp-6.0.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = /usr/lib
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = /usr/man
mkdir_p = /bin/mkdir -p
mpn_objects =  add$U.lo add_1$U.lo add_n.lo sub$U.lo sub_1$U.lo sub_n.lo cnd_add_n$U.lo cnd_sub_n$U.lo neg$U.lo com$U.lo mul_1.lo addmul_1.lo submul_1.lo add_err1_n$U.lo add_err2_n$U.lo add_err3_n$U.lo sub_err1_n$U.lo sub_err2_n$U.lo sub_err3_n$U.lo lshift.lo rshift.lo dive_1$U.lo diveby3$U.lo divis$U.lo divrem$U.lo divrem_1$U.lo divrem_2$U.lo fib2_ui$U.lo mod_1$U.lo mod_34lsub1$U.lo mode1o$U.lo pre_divrem_1$U.lo pre_mod_1$U.lo dump$U.lo mod_1_1$U.lo mod_1_2$U.lo mod_1_3$U.lo mod_1_4$U.lo lshiftc$U.lo mul$U.lo mul_fft$U.lo mul_n$U.lo sqr$U.lo mul_basecase$U.lo sqr_basecase$U.lo nussbaumer_mul$U.lo mulmid_basecase$U.lo toom42_mulmid$U.lo mulmid_n$U.lo mulmid$U.lo random$U.lo random2$U.lo pow_1$U.lo rootrem$U.lo sqrtrem$U.lo sizeinbase$U.lo get_str$U.lo set_str$U.lo scan0$U.lo scan1$U.lo popcount$U.lo hamdist$U.lo cmp$U.lo perfsqr$U.lo perfpow$U.lo gcd_1$U.lo gcd$U.lo gcdext_1$U.lo gcdext$U.lo gcd_subdiv_step$U.lo gcdext_lehmer$U.lo div_q$U.lo tdiv_qr$U.lo jacbase$U.lo jacobi_2$U.lo jacobi$U.lo get_d$U.lo matrix22_mul$U.lo matrix22_mul1_inverse_vector$U.lo hgcd_matrix$U.lo hgcd2$U.lo hgcd_step$U.lo hgcd_reduce$U.lo hgcd$U.lo hgcd_appr$U.lo hgcd2_jacobi$U.lo hgcd_jacobi$U.lo mullo_n$U.lo mullo_basecase$U.lo toom22_mul$U.lo toom32_mul$U.lo toom42_mul$U.lo toom52_mul$U.lo toom62_mul$U.lo toom33_mul$U.lo toom43_mul$U.lo toom53_mul$U.lo toom54_mul$U.lo toom63_mul$U.lo toom44_mul$U.lo toom6h_mul$U.lo toom6_sqr$U.lo toom8h_mul$U.lo toom8_sqr$U.lo toom_couple_handling$U.lo toom2_sqr$U.lo toom3_sqr$U.lo toom4_sqr$U.lo toom_eval_dgr3_pm1$U.lo toom_eval_dgr3_pm2$U.lo toom_eval_pm1$U.lo toom_eval_pm2$U.lo toom_eval_pm2exp$U.lo toom_eval_pm2rexp$U.lo toom_interpolate_5pts$U.lo toom_interpolate_6pts$U.lo toom_interpolate_7pts$U.lo toom_interpolate_8pts$U.lo toom_interpolate_12pts$U.lo toom_interpolate_16pts$U.lo invertappr$U.lo invert$U.lo binvert$U.lo mulmod_bnm1$U.lo sqrmod_bnm1$U.lo div_qr_1$U.lo div_qr_1n_pi1$U.lo div_qr_2$U.lo div_qr_2n_pi1$U.lo div_qr_2u_pi1$U.lo sbpi1_div_q$U.lo sbpi1_div_qr$U.lo sbpi1_divappr_q$U.lo dcpi1_div_q$U.lo dcpi1_div_qr$U.lo dcpi1_divappr_q$U.lo mu_div_qr$U.lo mu_divappr_q$U.lo mu_div_q$U.lo bdiv_q_1$U.lo sbpi1_bdiv_q$U.lo sbpi1_bdiv_qr$U.lo dcpi1_bdiv_q$U.lo dcpi1_bdiv_qr$U.lo mu_bdiv_q$U.lo mu_bdiv_qr$U.lo bdiv_q$U.lo bdiv_qr$U.lo broot$U.lo brootinv$U.lo bsqrt$U.lo bsqrtinv$U.lo divexact$U.lo bdiv_dbm1c$U.lo redc_1$U.lo redc_2$U.lo redc_n$U.lo powm$U.lo powlo$U.lo sec_powm$U.lo sec_mul$U.lo sec_sqr$U.lo sec_div_qr$U.lo sec_div_r$U.lo sec_pi1_div_qr$U.lo sec_pi1_div_r$U.lo sec_add_1$U.lo sec_sub_1$U.lo sec_invert$U.lo trialdiv$U.lo remove$U.lo and_n$U.lo andn_n$U.lo nand_n$U.lo ior_n$U.lo iorn_n$U.lo nior_n$U.lo xor_n$U.lo xnor_n$U.lo copyi$U.lo copyd$U.lo zero$U.lo sec_tabselect$U.lo comb_tables$U.lo umul.lo add_n_sub_n$U.lo
mpn_objs_in_libgmp =  mpn/add$U.lo mpn/add_1$U.lo mpn/add_n.lo mpn/sub$U.lo mpn/sub_1$U.lo mpn/sub_n.lo mpn/cnd_add_n$U.lo mpn/cnd_sub_n$U.lo mpn/neg$U.lo mpn/com$U.lo mpn/mul_1.lo mpn/addmul_1.lo mpn/submul_1.lo mpn/add_err1_n$U.lo mpn/add_err2_n$U.lo mpn/add_err3_n$U.lo mpn/sub_err1_n$U.lo mpn/sub_err2_n$U.lo mpn/sub_err3_n$U.lo mpn/lshift.lo mpn/rshift.lo mpn/dive_1$U.lo mpn/diveby3$U.lo mpn/divis$U.lo mpn/divrem$U.lo mpn/divrem_1$U.lo mpn/divrem_2$U.lo mpn/fib2_ui$U.lo mpn/mod_1$U.lo mpn/mod_34lsub1$U.lo mpn/mode1o$U.lo mpn/pre_divrem_1$U.lo mpn/pre_mod_1$U.lo mpn/dump$U.lo mpn/mod_1_1$U.lo mpn/mod_1_2$U.lo mpn/mod_1_3$U.lo mpn/mod_1_4$U.lo mpn/lshiftc$U.lo mpn/mul$U.lo mpn/mul_fft$U.lo mpn/mul_n$U.lo mpn/sqr$U.lo mpn/mul_basecase$U.lo mpn/sqr_basecase$U.lo mpn/nussbaumer_mul$U.lo mpn/mulmid_basecase$U.lo mpn/toom42_mulmid$U.lo mpn/mulmid_n$U.lo mpn/mulmid$U.lo mpn/random$U.lo mpn/random2$U.lo mpn/pow_1$U.lo mpn/rootrem$U.lo mpn/sqrtrem$U.lo mpn/sizeinbase$U.lo mpn/get_str$U.lo mpn/set_str$U.lo mpn/scan0$U.lo mpn/scan1$U.lo mpn/popcount$U.lo mpn/hamdist$U.lo mpn/cmp$U.lo mpn/perfsqr$U.lo mpn/perfpow$U.lo mpn/gcd_1$U.lo mpn/gcd$U.lo mpn/gcdext_1$U.lo mpn/gcdext$U.lo mpn/gcd_subdiv_step$U.lo mpn/gcdext_lehmer$U.lo mpn/div_q$U.lo mpn/tdiv_qr$U.lo mpn/jacbase$U.lo mpn/jacobi_2$U.lo mpn/jacobi$U.lo mpn/get_d$U.lo mpn/matrix22_mul$U.lo mpn/matrix22_mul1_inverse_vector$U.lo mpn/hgcd_matrix$U.lo mpn/hgcd2$U.lo mpn/hgcd_step$U.lo mpn/hgcd_reduce$U.lo mpn/hgcd$U.lo mpn/hgcd_appr$U.lo mpn/hgcd2_jacobi$U.lo mpn/hgcd_jacobi$U.lo mpn/mullo_n$U.lo mpn/mullo_basecase$U.lo mpn/toom22_mul$U.lo mpn/toom32_mul$U.lo mpn/toom42_mul$U.lo mpn/toom52_mul$U.lo mpn/toom62_mul$U.lo mpn/toom33_mul$U.lo mpn/toom43_mul$U.lo mpn/toom53_mul$U.lo mpn/toom54_mul$U.lo mpn/toom63_mul$U.lo mpn/toom44_mul$U.lo mpn/toom6h_mul$U.lo mpn/toom6_sqr$U.lo mpn/toom8h_mul$U.lo mpn/toom8_sqr$U.lo mpn/toom_couple_handling$U.lo mpn/toom2_sqr$U.lo mpn/toom3_sqr$U.lo mpn/toom4_sqr$U.lo mpn/toom_eval_dgr3_pm1$U.lo mpn/toom_eval_dgr3_pm2$U.lo mpn/toom_eval_pm1$U.lo mpn/toom_eval_pm2$U.lo mpn/toom_eval_pm2exp$U.lo mpn/toom_eval_pm2rexp$U.lo mpn/toom_interpolate_5pts$U.lo mpn/toom_interpolate_6pts$U.lo mpn/toom_interpolate_7pts$U.lo mpn/toom_interpolate_8pts$U.lo mpn/toom_interpolate_12pts$U.lo mpn/toom_interpolate_16pts$U.lo mpn/invertappr$U.lo mpn/invert$U.lo mpn/binvert$U.lo mpn/mulmod_bnm1$U.lo mpn/sqrmod_bnm1$U.lo mpn/div_qr_1$U.lo mpn/div_qr_1n_pi1$U.lo mpn/div_qr_2$U.lo mpn/div_qr_2n_pi1$U.lo mpn/div_qr_2u_pi1$U.lo mpn/sbpi1_div_q$U.lo mpn/sbpi1_div_qr$U.lo mpn/sbpi1_divappr_q$U.lo mpn/dcpi1_div_q$U.lo mpn/dcpi1_div_qr$U.lo mpn/dcpi1_divappr_q$U.lo mpn/mu_div_qr$U.lo mpn/mu_divappr_q$U.lo mpn/mu_div_q$U.lo mpn/bdiv_q_1$U.lo mpn/sbpi1_bdiv_q$U.lo mpn/sbpi1_bdiv_qr$U.lo mpn/dcpi1_bdiv_q$U.lo mpn/dcpi1_bdiv_qr$U.lo mpn/mu_bdiv_q$U.lo mpn/mu_bdiv_qr$U.lo mpn/bdiv_q$U.lo mpn/bdiv_qr$U.lo mpn/broot$U.lo mpn/brootinv$U.lo mpn/bsqrt$U.lo mpn/bsqrtinv$U.lo mpn/divexact$U.lo mpn/bdiv_dbm1c$U.lo mpn/redc_1$U.lo mpn/redc_2$U.lo mpn/redc_n$U.lo mpn/powm$U.lo mpn/powlo$U.lo mpn/sec_powm$U.lo mpn/sec_mul$U.lo mpn/sec_sqr$U.lo mpn/sec_div_qr$U.lo mpn/sec_div_r$U.lo mpn/sec_pi1_div_qr$U.lo mpn/sec_pi1_div_r$U.lo mpn/sec_add_1$U.lo mpn/sec_sub_1$U.lo mpn/sec_invert$U.lo mpn/trialdiv$U.lo mpn/remove$U.lo mpn/and_n$U.lo mpn/andn_n$U.lo mpn/nand_n$U.lo mpn/ior_n$U.lo mpn/iorn_n$U.lo mpn/nior_n$U.lo mpn/xor_n$U.lo mpn/xnor_n$U.lo mpn/copyi$U.lo mpn/copyd$U.lo mpn/zero$U.lo mpn/sec_tabselect$U.lo mpn/comb_tables$U.lo mpn/umul.lo mpn/add_n_sub_n$U.lo
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&$$&&;s&^&&
psdir = ${docdir}
sbindir = /usr/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = mips-rlx5281-linux
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/tests
LDADD = $(top_builddir)/tests/libtests.la $(top_builddir)/libgmp.la
TESTS = $(check_PROGRAMS)

# Temporary files used by the tests.  Removed automatically if the tests
# pass, but ensure they're cleaned if they fail.
#
CLEANFILES = *.tmp
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps tests/mpz/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps tests/mpz/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bit$(EXEEXT): $(bit_OBJECTS) $(bit_DEPENDENCIES) $(EXTRA_bit_DEPENDENCIES) 
	@rm -f bit$(EXEEXT)
	$(LINK) $(bit_OBJECTS) $(bit_LDADD) $(LIBS)
convert$(EXEEXT): $(convert_OBJECTS) $(convert_DEPENDENCIES) $(EXTRA_convert_DEPENDENCIES) 
	@rm -f convert$(EXEEXT)
	$(LINK) $(convert_OBJECTS) $(convert_LDADD) $(LIBS)
dive$(EXEEXT): $(dive_OBJECTS) $(dive_DEPENDENCIES) $(EXTRA_dive_DEPENDENCIES) 
	@rm -f dive$(EXEEXT)
	$(LINK) $(dive_OBJECTS) $(dive_LDADD) $(LIBS)
dive_ui$(EXEEXT): $(dive_ui_OBJECTS) $(dive_ui_DEPENDENCIES) $(EXTRA_dive_ui_DEPENDENCIES) 
	@rm -f dive_ui$(EXEEXT)
	$(LINK) $(dive_ui_OBJECTS) $(dive_ui_LDADD) $(LIBS)
io$(EXEEXT): $(io_OBJECTS) $(io_DEPENDENCIES) $(EXTRA_io_DEPENDENCIES) 
	@rm -f io$(EXEEXT)
	$(LINK) $(io_OBJECTS) $(io_LDADD) $(LIBS)
logic$(EXEEXT): $(logic_OBJECTS) $(logic_DEPENDENCIES) $(EXTRA_logic_DEPENDENCIES) 
	@rm -f logic$(EXEEXT)
	$(LINK) $(logic_OBJECTS) $(logic_LDADD) $(LIBS)
reuse$(EXEEXT): $(reuse_OBJECTS) $(reuse_DEPENDENCIES) $(EXTRA_reuse_DEPENDENCIES) 
	@rm -f reuse$(EXEEXT)
	$(LINK) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)
t-addsub$(EXEEXT): $(t_addsub_OBJECTS) $(t_addsub_DEPENDENCIES) $(EXTRA_t_addsub_DEPENDENCIES) 
	@rm -f t-addsub$(EXEEXT)
	$(LINK) $(t_addsub_OBJECTS) $(t_addsub_LDADD) $(LIBS)
t-aorsmul$(EXEEXT): $(t_aorsmul_OBJECTS) $(t_aorsmul_DEPENDENCIES) $(EXTRA_t_aorsmul_DEPENDENCIES) 
	@rm -f t-aorsmul$(EXEEXT)
	$(LINK) $(t_aorsmul_OBJECTS) $(t_aorsmul_LDADD) $(LIBS)
t-bin$(EXEEXT): $(t_bin_OBJECTS) $(t_bin_DEPENDENCIES) $(EXTRA_t_bin_DEPENDENCIES) 
	@rm -f t-bin$(EXEEXT)
	$(LINK) $(t_bin_OBJECTS) $(t_bin_LDADD) $(LIBS)
t-cdiv_ui$(EXEEXT): $(t_cdiv_ui_OBJECTS) $(t_cdiv_ui_DEPENDENCIES) $(EXTRA_t_cdiv_ui_DEPENDENCIES) 
	@rm -f t-cdiv_ui$(EXEEXT)
	$(LINK) $(t_cdiv_ui_OBJECTS) $(t_cdiv_ui_LDADD) $(LIBS)
t-cmp$(EXEEXT): $(t_cmp_OBJECTS) $(t_cmp_DEPENDENCIES) $(EXTRA_t_cmp_DEPENDENCIES) 
	@rm -f t-cmp$(EXEEXT)
	$(LINK) $(t_cmp_OBJECTS) $(t_cmp_LDADD) $(LIBS)
t-cmp_d$(EXEEXT): $(t_cmp_d_OBJECTS) $(t_cmp_d_DEPENDENCIES) $(EXTRA_t_cmp_d_DEPENDENCIES) 
	@rm -f t-cmp_d$(EXEEXT)
	$(LINK) $(t_cmp_d_OBJECTS) $(t_cmp_d_LDADD) $(LIBS)
t-cmp_si$(EXEEXT): $(t_cmp_si_OBJECTS) $(t_cmp_si_DEPENDENCIES) $(EXTRA_t_cmp_si_DEPENDENCIES) 
	@rm -f t-cmp_si$(EXEEXT)
	$(LINK) $(t_cmp_si_OBJECTS) $(t_cmp_si_LDADD) $(LIBS)
t-cong$(EXEEXT): $(t_cong_OBJECTS) $(t_cong_DEPENDENCIES) $(EXTRA_t_cong_DEPENDENCIES) 
	@rm -f t-cong$(EXEEXT)
	$(LINK) $(t_cong_OBJECTS) $(t_cong_LDADD) $(LIBS)
t-cong_2exp$(EXEEXT): $(t_cong_2exp_OBJECTS) $(t_cong_2exp_DEPENDENCIES) $(EXTRA_t_cong_2exp_DEPENDENCIES) 
	@rm -f t-cong_2exp$(EXEEXT)
	$(LINK) $(t_cong_2exp_OBJECTS) $(t_cong_2exp_LDADD) $(LIBS)
t-div_2exp$(EXEEXT): $(t_div_2exp_OBJECTS) $(t_div_2exp_DEPENDENCIES) $(EXTRA_t_div_2exp_DEPENDENCIES) 
	@rm -f t-div_2exp$(EXEEXT)
	$(LINK) $(t_div_2exp_OBJECTS) $(t_div_2exp_LDADD) $(LIBS)
t-divis$(EXEEXT): $(t_divis_OBJECTS) $(t_divis_DEPENDENCIES) $(EXTRA_t_divis_DEPENDENCIES) 
	@rm -f t-divis$(EXEEXT)
	$(LINK) $(t_divis_OBJECTS) $(t_divis_LDADD) $(LIBS)
t-divis_2exp$(EXEEXT): $(t_divis_2exp_OBJECTS) $(t_divis_2exp_DEPENDENCIES) $(EXTRA_t_divis_2exp_DEPENDENCIES) 
	@rm -f t-divis_2exp$(EXEEXT)
	$(LINK) $(t_divis_2exp_OBJECTS) $(t_divis_2exp_LDADD) $(LIBS)
t-export$(EXEEXT): $(t_export_OBJECTS) $(t_export_DEPENDENCIES) $(EXTRA_t_export_DEPENDENCIES) 
	@rm -f t-export$(EXEEXT)
	$(LINK) $(t_export_OBJECTS) $(t_export_LDADD) $(LIBS)
t-fac_ui$(EXEEXT): $(t_fac_ui_OBJECTS) $(t_fac_ui_DEPENDENCIES) $(EXTRA_t_fac_ui_DEPENDENCIES) 
	@rm -f t-fac_ui$(EXEEXT)
	$(LINK) $(t_fac_ui_OBJECTS) $(t_fac_ui_LDADD) $(LIBS)
t-fdiv$(EXEEXT): $(t_fdiv_OBJECTS) $(t_fdiv_DEPENDENCIES) $(EXTRA_t_fdiv_DEPENDENCIES) 
	@rm -f t-fdiv$(EXEEXT)
	$(LINK) $(t_fdiv_OBJECTS) $(t_fdiv_LDADD) $(LIBS)
t-fdiv_ui$(EXEEXT): $(t_fdiv_ui_OBJECTS) $(t_fdiv_ui_DEPENDENCIES) $(EXTRA_t_fdiv_ui_DEPENDENCIES) 
	@rm -f t-fdiv_ui$(EXEEXT)
	$(LINK) $(t_fdiv_ui_OBJECTS) $(t_fdiv_ui_LDADD) $(LIBS)
t-fib_ui$(EXEEXT): $(t_fib_ui_OBJECTS) $(t_fib_ui_DEPENDENCIES) $(EXTRA_t_fib_ui_DEPENDENCIES) 
	@rm -f t-fib_ui$(EXEEXT)
	$(LINK) $(t_fib_ui_OBJECTS) $(t_fib_ui_LDADD) $(LIBS)
t-fits$(EXEEXT): $(t_fits_OBJECTS) $(t_fits_DEPENDENCIES) $(EXTRA_t_fits_DEPENDENCIES) 
	@rm -f t-fits$(EXEEXT)
	$(LINK) $(t_fits_OBJECTS) $(t_fits_LDADD) $(LIBS)
t-gcd$(EXEEXT): $(t_gcd_OBJECTS) $(t_gcd_DEPENDENCIES) $(EXTRA_t_gcd_DEPENDENCIES) 
	@rm -f t-gcd$(EXEEXT)
	$(LINK) $(t_gcd_OBJECTS) $(t_gcd_LDADD) $(LIBS)
t-gcd_ui$(EXEEXT): $(t_gcd_ui_OBJECTS) $(t_gcd_ui_DEPENDENCIES) $(EXTRA_t_gcd_ui_DEPENDENCIES) 
	@rm -f t-gcd_ui$(EXEEXT)
	$(LINK) $(t_gcd_ui_OBJECTS) $(t_gcd_ui_LDADD) $(LIBS)
t-get_d$(EXEEXT): $(t_get_d_OBJECTS) $(t_get_d_DEPENDENCIES) $(EXTRA_t_get_d_DEPENDENCIES) 
	@rm -f t-get_d$(EXEEXT)
	$(LINK) $(t_get_d_OBJECTS) $(t_get_d_LDADD) $(LIBS)
t-get_d_2exp$(EXEEXT): $(t_get_d_2exp_OBJECTS) $(t_get_d_2exp_DEPENDENCIES) $(EXTRA_t_get_d_2exp_DEPENDENCIES) 
	@rm -f t-get_d_2exp$(EXEEXT)
	$(LINK) $(t_get_d_2exp_OBJECTS) $(t_get_d_2exp_LDADD) $(LIBS)
t-get_si$(EXEEXT): $(t_get_si_OBJECTS) $(t_get_si_DEPENDENCIES) $(EXTRA_t_get_si_DEPENDENCIES) 
	@rm -f t-get_si$(EXEEXT)
	$(LINK) $(t_get_si_OBJECTS) $(t_get_si_LDADD) $(LIBS)
t-hamdist$(EXEEXT): $(t_hamdist_OBJECTS) $(t_hamdist_DEPENDENCIES) $(EXTRA_t_hamdist_DEPENDENCIES) 
	@rm -f t-hamdist$(EXEEXT)
	$(LINK) $(t_hamdist_OBJECTS) $(t_hamdist_LDADD) $(LIBS)
t-import$(EXEEXT): $(t_import_OBJECTS) $(t_import_DEPENDENCIES) $(EXTRA_t_import_DEPENDENCIES) 
	@rm -f t-import$(EXEEXT)
	$(LINK) $(t_import_OBJECTS) $(t_import_LDADD) $(LIBS)
t-inp_str$(EXEEXT): $(t_inp_str_OBJECTS) $(t_inp_str_DEPENDENCIES) $(EXTRA_t_inp_str_DEPENDENCIES) 
	@rm -f t-inp_str$(EXEEXT)
	$(LINK) $(t_inp_str_OBJECTS) $(t_inp_str_LDADD) $(LIBS)
t-invert$(EXEEXT): $(t_invert_OBJECTS) $(t_invert_DEPENDENCIES) $(EXTRA_t_invert_DEPENDENCIES) 
	@rm -f t-invert$(EXEEXT)
	$(LINK) $(t_invert_OBJECTS) $(t_invert_LDADD) $(LIBS)
t-io_raw$(EXEEXT): $(t_io_raw_OBJECTS) $(t_io_raw_DEPENDENCIES) $(EXTRA_t_io_raw_DEPENDENCIES) 
	@rm -f t-io_raw$(EXEEXT)
	$(LINK) $(t_io_raw_OBJECTS) $(t_io_raw_LDADD) $(LIBS)
t-jac$(EXEEXT): $(t_jac_OBJECTS) $(t_jac_DEPENDENCIES) $(EXTRA_t_jac_DEPENDENCIES) 
	@rm -f t-jac$(EXEEXT)
	$(LINK) $(t_jac_OBJECTS) $(t_jac_LDADD) $(LIBS)
t-lcm$(EXEEXT): $(t_lcm_OBJECTS) $(t_lcm_DEPENDENCIES) $(EXTRA_t_lcm_DEPENDENCIES) 
	@rm -f t-lcm$(EXEEXT)
	$(LINK) $(t_lcm_OBJECTS) $(t_lcm_LDADD) $(LIBS)
t-limbs$(EXEEXT): $(t_limbs_OBJECTS) $(t_limbs_DEPENDENCIES) $(EXTRA_t_limbs_DEPENDENCIES) 
	@rm -f t-limbs$(EXEEXT)
	$(LINK) $(t_limbs_OBJECTS) $(t_limbs_LDADD) $(LIBS)
t-lucnum_ui$(EXEEXT): $(t_lucnum_ui_OBJECTS) $(t_lucnum_ui_DEPENDENCIES) $(EXTRA_t_lucnum_ui_DEPENDENCIES) 
	@rm -f t-lucnum_ui$(EXEEXT)
	$(LINK) $(t_lucnum_ui_OBJECTS) $(t_lucnum_ui_LDADD) $(LIBS)
t-mfac_uiui$(EXEEXT): $(t_mfac_uiui_OBJECTS) $(t_mfac_uiui_DEPENDENCIES) $(EXTRA_t_mfac_uiui_DEPENDENCIES) 
	@rm -f t-mfac_uiui$(EXEEXT)
	$(LINK) $(t_mfac_uiui_OBJECTS) $(t_mfac_uiui_LDADD) $(LIBS)
t-mul$(EXEEXT): $(t_mul_OBJECTS) $(t_mul_DEPENDENCIES) $(EXTRA_t_mul_DEPENDENCIES) 
	@rm -f t-mul$(EXEEXT)
	$(LINK) $(t_mul_OBJECTS) $(t_mul_LDADD) $(LIBS)
t-mul_i$(EXEEXT): $(t_mul_i_OBJECTS) $(t_mul_i_DEPENDENCIES) $(EXTRA_t_mul_i_DEPENDENCIES) 
	@rm -f t-mul_i$(EXEEXT)
	$(LINK) $(t_mul_i_OBJECTS) $(t_mul_i_LDADD) $(LIBS)
t-nextprime$(EXEEXT): $(t_nextprime_OBJECTS) $(t_nextprime_DEPENDENCIES) $(EXTRA_t_nextprime_DEPENDENCIES) 
	@rm -f t-nextprime$(EXEEXT)
	$(LINK) $(t_nextprime_OBJECTS) $(t_nextprime_LDADD) $(LIBS)
t-oddeven$(EXEEXT): $(t_oddeven_OBJECTS) $(t_oddeven_DEPENDENCIES) $(EXTRA_t_oddeven_DEPENDENCIES) 
	@rm -f t-oddeven$(EXEEXT)
	$(LINK) $(t_oddeven_OBJECTS) $(t_oddeven_LDADD) $(LIBS)
t-perfpow$(EXEEXT): $(t_perfpow_OBJECTS) $(t_perfpow_DEPENDENCIES) $(EXTRA_t_perfpow_DEPENDENCIES) 
	@rm -f t-perfpow$(EXEEXT)
	$(LINK) $(t_perfpow_OBJECTS) $(t_perfpow_LDADD) $(LIBS)
t-perfsqr$(EXEEXT): $(t_perfsqr_OBJECTS) $(t_perfsqr_DEPENDENCIES) $(EXTRA_t_perfsqr_DEPENDENCIES) 
	@rm -f t-perfsqr$(EXEEXT)
	$(LINK) $(t_perfsqr_OBJECTS) $(t_perfsqr_LDADD) $(LIBS)
t-popcount$(EXEEXT): $(t_popcount_OBJECTS) $(t_popcount_DEPENDENCIES) $(EXTRA_t_popcount_DEPENDENCIES) 
	@rm -f t-popcount$(EXEEXT)
	$(LINK) $(t_popcount_OBJECTS) $(t_popcount_LDADD) $(LIBS)
t-pow$(EXEEXT): $(t_pow_OBJECTS) $(t_pow_DEPENDENCIES) $(EXTRA_t_pow_DEPENDENCIES) 
	@rm -f t-pow$(EXEEXT)
	$(LINK) $(t_pow_OBJECTS) $(t_pow_LDADD) $(LIBS)
t-powm$(EXEEXT): $(t_powm_OBJECTS) $(t_powm_DEPENDENCIES) $(EXTRA_t_powm_DEPENDENCIES) 
	@rm -f t-powm$(EXEEXT)
	$(LINK) $(t_powm_OBJECTS) $(t_powm_LDADD) $(LIBS)
t-powm_ui$(EXEEXT): $(t_powm_ui_OBJECTS) $(t_powm_ui_DEPENDENCIES) $(EXTRA_t_powm_ui_DEPENDENCIES) 
	@rm -f t-powm_ui$(EXEEXT)
	$(LINK) $(t_powm_ui_OBJECTS) $(t_powm_ui_LDADD) $(LIBS)
t-pprime_p$(EXEEXT): $(t_pprime_p_OBJECTS) $(t_pprime_p_DEPENDENCIES) $(EXTRA_t_pprime_p_DEPENDENCIES) 
	@rm -f t-pprime_p$(EXEEXT)
	$(LINK) $(t_pprime_p_OBJECTS) $(t_pprime_p_LDADD) $(LIBS)
t-primorial_ui$(EXEEXT): $(t_primorial_ui_OBJECTS) $(t_primorial_ui_DEPENDENCIES) $(EXTRA_t_primorial_ui_DEPENDENCIES) 
	@rm -f t-primorial_ui$(EXEEXT)
	$(LINK) $(t_primorial_ui_OBJECTS) $(t_primorial_ui_LDADD) $(LIBS)
t-remove$(EXEEXT): $(t_remove_OBJECTS) $(t_remove_DEPENDENCIES) $(EXTRA_t_remove_DEPENDENCIES) 
	@rm -f t-remove$(EXEEXT)
	$(LINK) $(t_remove_OBJECTS) $(t_remove_LDADD) $(LIBS)
t-root$(EXEEXT): $(t_root_OBJECTS) $(t_root_DEPENDENCIES) $(EXTRA_t_root_DEPENDENCIES) 
	@rm -f t-root$(EXEEXT)
	$(LINK) $(t_root_OBJECTS) $(t_root_LDADD) $(LIBS)
t-scan$(EXEEXT): $(t_scan_OBJECTS) $(t_scan_DEPENDENCIES) $(EXTRA_t_scan_DEPENDENCIES) 
	@rm -f t-scan$(EXEEXT)
	$(LINK) $(t_scan_OBJECTS) $(t_scan_LDADD) $(LIBS)
t-set_d$(EXEEXT): $(t_set_d_OBJECTS) $(t_set_d_DEPENDENCIES) $(EXTRA_t_set_d_DEPENDENCIES) 
	@rm -f t-set_d$(EXEEXT)
	$(LINK) $(t_set_d_OBJECTS) $(t_set_d_LDADD) $(LIBS)
t-set_f$(EXEEXT): $(t_set_f_OBJECTS) $(t_set_f_DEPENDENCIES) $(EXTRA_t_set_f_DEPENDENCIES) 
	@rm -f t-set_f$(EXEEXT)
	$(LINK) $(t_set_f_OBJECTS) $(t_set_f_LDADD) $(LIBS)
t-set_si$(EXEEXT): $(t_set_si_OBJECTS) $(t_set_si_DEPENDENCIES) $(EXTRA_t_set_si_DEPENDENCIES) 
	@rm -f t-set_si$(EXEEXT)
	$(LINK) $(t_set_si_OBJECTS) $(t_set_si_LDADD) $(LIBS)
t-set_str$(EXEEXT): $(t_set_str_OBJECTS) $(t_set_str_DEPENDENCIES) $(EXTRA_t_set_str_DEPENDENCIES) 
	@rm -f t-set_str$(EXEEXT)
	$(LINK) $(t_set_str_OBJECTS) $(t_set_str_LDADD) $(LIBS)
t-sizeinbase$(EXEEXT): $(t_sizeinbase_OBJECTS) $(t_sizeinbase_DEPENDENCIES) $(EXTRA_t_sizeinbase_DEPENDENCIES) 
	@rm -f t-sizeinbase$(EXEEXT)
	$(LINK) $(t_sizeinbase_OBJECTS) $(t_sizeinbase_LDADD) $(LIBS)
t-sqrtrem$(EXEEXT): $(t_sqrtrem_OBJECTS) $(t_sqrtrem_DEPENDENCIES) $(EXTRA_t_sqrtrem_DEPENDENCIES) 
	@rm -f t-sqrtrem$(EXEEXT)
	$(LINK) $(t_sqrtrem_OBJECTS) $(t_sqrtrem_LDADD) $(LIBS)
t-tdiv$(EXEEXT): $(t_tdiv_OBJECTS) $(t_tdiv_DEPENDENCIES) $(EXTRA_t_tdiv_DEPENDENCIES) 
	@rm -f t-tdiv$(EXEEXT)
	$(LINK) $(t_tdiv_OBJECTS) $(t_tdiv_LDADD) $(LIBS)
t-tdiv_ui$(EXEEXT): $(t_tdiv_ui_OBJECTS) $(t_tdiv_ui_DEPENDENCIES) $(EXTRA_t_tdiv_ui_DEPENDENCIES) 
	@rm -f t-tdiv_ui$(EXEEXT)
	$(LINK) $(t_tdiv_ui_OBJECTS) $(t_tdiv_ui_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


$(top_builddir)/tests/libtests.la:
	cd $(top_builddir)/tests; $(MAKE) $(AM_MAKEFLAGS) libtests.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:





@deftypefun {int} {gnutls_openpgp_privkey_export} (gnutls_openpgp_privkey_t @var{key}, gnutls_openpgp_crt_fmt_t @var{format}, const char * @var{password}, unsigned int @var{flags}, void * @var{output_data}, size_t * @var{output_data_size})
@var{key}: Holds the key.

@var{format}: One of gnutls_openpgp_crt_fmt_t elements.

@var{password}: the password that will be used to encrypt the key. (unused for now)

@var{flags}: (0) for future compatibility

@var{output_data}: will contain the key base64 encoded or raw

@var{output_data_size}: holds the size of output_data (and will be
replaced by the actual size of parameters)

This function will convert the given key to RAW or Base64 format.
If the buffer provided is not long enough to hold the output, then
GNUTLS_E_SHORT_MEMORY_BUFFER will be returned.

@strong{Returns:} @code{GNUTLS_E_SUCCESS}  on success, or an error code.

@strong{Since:} 2.4.0
@end deftypefun

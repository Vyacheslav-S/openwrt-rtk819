NAME
    BusyBox - The Swiss Army Knife of Embedded Linux

SYNTAX
     busybox <applet> [arguments...]  # or

     <applet> [arguments...]          # if symlinked

DESCRIPTION
    BusyBox combines tiny versions of many common UNIX utilities into a
    single small executable. It provides minimalist replacements for most of
    the utilities you usually find in GNU coreutils, util-linux, etc. The
    utilities in BusyBox generally have fewer options than their
    full-featured GNU cousins; however, the options that are included
    provide the expected functionality and behave very much like their GNU
    counterparts.

    BusyBox has been written with size-optimization and limited resources in
    mind. It is also extremely modular so you can easily include or exclude
    commands (or features) at compile time. This makes it easy to customize
    your embedded systems. To create a working system, just add /dev, /etc,
    and a Linux kernel. BusyBox provides a fairly complete POSIX environment
    for any small or embedded system.

    BusyBox is extremely configurable. This allows you to include only the
    components you need, thereby reducing binary size. Run 'make config' or
    'make menuconfig' to select the functionality that you wish to enable.
    Then run 'make' to compile BusyBox using your configuration.

    After the compile has finished, you should use 'make install' to install
    BusyBox. This will install the 'bin/busybox' binary, in the target
    directory specified by CONFIG_PREFIX. CONFIG_PREFIX can be set when
    configuring BusyBox, or you can specify an alternative location at
    install time (i.e., with a command line like 'make
    CONFIG_PREFIX=/tmp/foo install'). If you enabled any applet installation
    scheme (either as symlinks or hardlinks), these will also be installed
    in the location pointed to by CONFIG_PREFIX.

USAGE
    BusyBox is a multi-call binary. A multi-call binary is an executable
    program that performs the same job as more than one utility program.
    That means there is just a single BusyBox binary, but that single binary
    acts like a large number of utilities. This allows BusyBox to be smaller
    since all the built-in utility programs (we call them applets) can share
    code for many common operations.

    You can also invoke BusyBox by issuing a command as an argument on the
    command line. For example, entering

            /bin/busybox ls

    will also cause BusyBox to behave as 'ls'.

    Of course, adding '/bin/busybox' into every command would be painful. So
    most people will invoke BusyBox using links to the BusyBox binary.

    For example, entering

            ln -s /bin/busybox ls
            ./ls

    will cause BusyBox to behave as 'ls' (if the 'ls' command has been
    compiled into BusyBox). Generally speaking, you should never need to
    make all these links yourself, as the BusyBox build system will do this
    for you when you run the 'make install' command.

    If you invoke BusyBox with no arguments, it will provide you with a list
    of the applets that have been compiled into your BusyBox binary.

COMMON OPTIONS
    Most BusyBox applets support the --help argument to provide a terse
    runtime description of their behavior. If the
    CONFIG_FEATURE_VERBOSE_USAGE option has been enabled, more detailed
    usage information will also be available.

COMMANDS
    Currently available applets include:

            [, [[, arping, ash, awk, basename, brctl, bunzip2, bzcat, cat,
            chgrp, chmod, chown, chroot, clear, cmp, cp, crond, crontab, cut,
            date, dd, devmem, df, dirname, dmesg, du, echo, egrep, env, expr,
            false, fgrep, find, free, fsync, grep, gunzip, gzip, halt, head,
            hexdump, hostid, hwclock, id, ifconfig, kill, killall, less, ln,
            lock, logger, ls, md5sum, mkdir, mkfifo, mknod, mkswap, mktemp,
            mount, mv, nc, netmsg, netstat, nice, nslookup, ntpd, passwd, pgrep,
            pidof, ping, ping6, pivot_root, poweroff, printf, ps, pwd, readlink,
            reboot, reset, rm, rmdir, route, sed, seq, sh, sleep, sort,
            start-stop-daemon, strings, switch_root, sync, sysctl, tail, tar,
            tee, telnet, telnetd, test, time, top, touch, tr, traceroute, true,
            udhcpc, umount, uname, uniq, uptime, vconfig, vi, wc, wget, which,
            xargs, yes, zcat

COMMAND DESCRIPTIONS
    arping
        arping [-fqbDUA] [-c CNT] [-w TIMEOUT] [-I IFACE] [-s SRC_IP] DST_IP

        Send ARP requests/replies

                -f              Quit on first ARP reply
                -q              Quiet
                -b              Keep broadcasting, don't go unicast
                -D              Duplicated address detection mode
                -U              Unsolicited ARP mode, update your neighbors
                -A              ARP answer mode, update your neighbors
                -c N            Stop after sending N ARP requests
                -w TIMEOUT      Time to wait for ARP reply, seconds
                -I IFACE        Interface to use (default eth0)
                -s SRC_IP       Sender IP address
                DST_IP          Target IP address

    ash ash [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE
        [ARGS]]

        Unix shell interpreter

    awk awk [OPTIONS] [AWK_PROGRAM] [FILE]...

                -v VAR=VAL      Set variable
                -F SEP          Use SEP as field separator
                -f FILE         Read program from FILE
                -e AWK_PROGRAM

    basename
        basename FILE [SUFFIX]

        Strip directory path and .SUFFIX from FILE

    brctl
        brctl COMMAND [BRIDGE [INTERFACE]]

        Manage ethernet bridges

        Commands:

                show                    Show a list of bridges
                addbr BRIDGE            Create BRIDGE
                delbr BRIDGE            Delete BRIDGE
                addif BRIDGE IFACE      Add IFACE to BRIDGE
                delif BRIDGE IFACE      Delete IFACE from BRIDGE
                setageing BRIDGE TIME           Set ageing time
                setfd BRIDGE TIME               Set bridge forward delay
                sethello BRIDGE TIME            Set hello time
                setmaxage BRIDGE TIME           Set max message age
                setpathcost BRIDGE COST         Set path cost
                setportprio BRIDGE PRIO         Set port priority
                setbridgeprio BRIDGE PRIO       Set bridge priority
                stp BRIDGE [1/yes/on|0/no/off]  STP on/off

    bunzip2
        bunzip2 [-cf] [FILE]...

        Decompress FILEs (or stdin)

                -c      Write to stdout
                -f      Force

    bzcat
        bzcat [FILE]...

        Decompress to stdout

    cat cat [FILE]...

        Concatenate FILEs and print them to stdout

    chgrp
        chgrp [-RhLHP]... GROUP FILE...

        Change the group membership of each FILE to GROUP

                -R      Recurse
                -h      Affect symlinks instead of symlink targets
                -L      Traverse all symlinks to directories
                -H      Traverse symlinks on command line only
                -P      Don't traverse symlinks (default)

    chmod
        chmod [-R] MODE[,MODE]... FILE...

        Each MODE is one or more of the letters ugoa, one of the symbols +-=
        and one or more of the letters rwxst

                -R      Recurse

    chown
        chown [-RhLHP]... OWNER[<.|:>[GROUP]] FILE...

        Change the owner and/or group of each FILE to OWNER and/or GROUP

                -R      Recurse
                -h      Affect symlinks instead of symlink targets
                -L      Traverse all symlinks to directories
                -H      Traverse symlinks on command line only
                -P      Don't traverse symlinks (default)

    chroot
        chroot NEWROOT [PROG ARGS]

        Run PROG with root directory set to NEWROOT

    clear
        clear

        Clear screen

    cmp cmp [-l] [-s] FILE1 [FILE2]

        Compare FILE1 with FILE2 (or stdin)

                -l      Write the byte numbers (decimal) and values (octal)
                        for all differing bytes
                -s      Quiet

    cp  cp [OPTIONS] SOURCE... DEST

        Copy SOURCE(s) to DEST

                -a      Same as -dpR
                -R,-r   Recurse
                -d,-P   Preserve symlinks (default if -R)
                -L      Follow all symlinks
                -H      Follow symlinks on command line
                -p      Preserve file attributes if possible
                -f      Overwrite
                -i      Prompt before overwrite
                -l,-s   Create (sym)links

    crond
        crond -fbS -l N -L LOGFILE -c DIR

                -f      Foreground
                -b      Background (default)
                -S      Log to syslog (default)
                -l      Set log level. 0 is the most verbose, default 8
                -L      Log to file
                -c      Working dir

    crontab
        crontab [-c DIR] [-u USER] [-ler]|[FILE]

                -c      Crontab directory
                -u      User
                -l      List crontab
                -e      Edit crontab
                -r      Delete crontab
                FILE    Replace crontab by FILE ('-': stdin)

    cut cut [OPTIONS] [FILE]...

        Print selected fields from each input FILE to stdout

                -b LIST Output only bytes from LIST
                -c LIST Output only characters from LIST
                -d CHAR Use CHAR instead of tab as the field delimiter
                -s      Output only the lines containing delimiter
                -f N    Print only these fields
                -n      Ignored

    date
        date [OPTIONS] [+FMT] [TIME]

        Display time (using +FMT), or set time

                [-s,--set] TIME Set time to TIME
                -u,--utc        Work in UTC (don't convert to local time)
                -R,--rfc-2822   Output RFC-2822 compliant date string
                -I[SPEC]        Output ISO-8601 compliant date string
                                SPEC='date' (default) for date only,
                                'hours', 'minutes', or 'seconds' for date and
                                time to the indicated precision
                -r,--reference FILE     Display last modification time of FILE
                -d,--date TIME  Display TIME, not 'now'
                -D FMT          Use FMT for -d TIME conversion
                -k              Set Kernel timezone from localtime and exit

        Recognized TIME formats:

                hh:mm[:ss]
                [YYYY.]MM.DD-hh:mm[:ss]
                YYYY-MM-DD hh:mm[:ss]
                [[[[[YY]YY]MM]DD]hh]mm[.ss]

    dd  dd [if=FILE] [of=FILE] [ibs=N] [obs=N] [bs=N] [count=N] [skip=N]
        [seek=N] [conv=notrunc|noerror|sync|fsync]

        Copy a file with converting and formatting

                if=FILE         Read from FILE instead of stdin
                of=FILE         Write to FILE instead of stdout
                bs=N            Read and write N bytes at a time
                ibs=N           Read N bytes at a time
                obs=N           Write N bytes at a time
                count=N         Copy only N input blocks
                skip=N          Skip N input blocks
                seek=N          Skip N output blocks
                conv=notrunc    Don't truncate output file
                conv=noerror    Continue after read errors
                conv=sync       Pad blocks with zeros
                conv=fsync      Physically write data out before finishing
                conv=swab       Swap every pair of bytes

        N may be suffixed by c (1), w (2), b (512), kD (1000), k (1024), MD,
        M, GD, G

    devmem
        devmem ADDRESS [WIDTH [VALUE]]

        Read/write from physical address

                ADDRESS Address to act upon
                WIDTH   Width (8/16/...)
                VALUE   Data to be written

    df  df [-Pkmh] [FILESYSTEM]...

        Print filesystem usage statistics

                -P      POSIX output format
                -k      1024-byte blocks (default)
                -m      1M-byte blocks
                -h      Human readable (e.g. 1K 243M 2G)

    dirname
        dirname FILENAME

        Strip non-directory suffix from FILENAME

    dmesg
        dmesg [-c] [-n LEVEL] [-s SIZE]

        Print or control the kernel ring buffer

                -c              Clear ring buffer after printing
                -n LEVEL        Set console logging level
                -s SIZE         Buffer size

    du  du [-aHLdclsxhmk] [FILE]...

        Summarize disk space used for each FILE and/or directory

                -a      Show file sizes too
                -L      Follow all symlinks
                -H      Follow symlinks on command line
                -d N    Limit output to directories (and files with -a) of depth < N
                -c      Show grand total
                -l      Count sizes many times if hard linked
                -s      Display only a total for each argument
                -x      Skip directories on different filesystems
                -h      Sizes in human readable format (e.g., 1K 243M 2G)
                -m      Sizes in megabytes
                -k      Sizes in kilobytes (default)

    echo
        echo [-neE] [ARG]...

        Print the specified ARGs to stdout

                -n      Suppress trailing newline
                -e      Interpret backslash escapes (i.e., \t=tab)
                -E      Don't interpret backslash escapes (default)

    env env [-iu] [-] [name=value]... [PROG ARGS]

        Print the current environment or run PROG after setting up the
        specified environment

                -, -i   Start with an empty environment
                -u      Remove variable from the environment

    expr
        expr EXPRESSION

        Print the value of EXPRESSION to stdout

        EXPRESSION may be:

                ARG1 | ARG2     ARG1 if it is neither null nor 0, otherwise ARG2
                ARG1 & ARG2     ARG1 if neither argument is null or 0, otherwise 0
                ARG1 < ARG2     1 if ARG1 is less than ARG2, else 0. Similarly:
                ARG1 <= ARG2
                ARG1 = ARG2
                ARG1 != ARG2
                ARG1 >= ARG2
                ARG1 > ARG2
                ARG1 + ARG2     Sum of ARG1 and ARG2. Similarly:
                ARG1 - ARG2
                ARG1 * ARG2
                ARG1 / ARG2
                ARG1 % ARG2
                STRING : REGEXP         Anchored pattern match of REGEXP in STRING
                match STRING REGEXP     Same as STRING : REGEXP
                substr STRING POS LENGTH Substring of STRING, POS counted from 1
                index STRING CHARS      Index in STRING where any CHARS is found, or 0
                length STRING           Length of STRING
                quote TOKEN             Interpret TOKEN as a string, even if
                                        it is a keyword like 'match' or an
                                        operator like '/'
                (EXPRESSION)            Value of EXPRESSION

        Beware that many operators need to be escaped or quoted for shells.
        Comparisons are arithmetic if both ARGs are numbers, else
        lexicographical. Pattern matches return the string matched between
        \( and \) or null; if \( and \) are not used, they return the number
        of characters matched or 0.

    false
        false

        Return an exit code of FALSE (1)

    find
        find [-HL] [PATH]... [OPTIONS] [ACTIONS]

        Search for files and perform actions on them. First failed action
        stops processing of current file. Defaults: PATH is current
        directory, action is '-print'

                -L,-follow      Follow symlinks
                -H              ...on command line only
                -xdev           Don't descend directories on other filesystems
                -maxdepth N     Descend at most N levels. -maxdepth 0 applies
                                actions to command line arguments only
                -mindepth N     Don't act on first N levels
                -depth          Act on directory *after* traversing it

        Actions:

                ( ACTIONS )     Group actions for -o / -a
                ! ACT           Invert ACT's success/failure
                ACT1 [-a] ACT2  If ACT1 fails, stop, else do ACT2
                ACT1 -o ACT2    If ACT1 succeeds, stop, else do ACT2
                                Note: -a has higher priority than -o
                -name PATTERN   Match file name (w/o directory name) to PATTERN
                -iname PATTERN  Case insensitive -name
                -path PATTERN   Match path to PATTERN
                -ipath PATTERN  Case insensitive -path
                -regex PATTERN  Match path to regex PATTERN
                -type X         File type is X (one of: f,d,l,b,c,...)
                -perm MASK      At least one mask bit (+MASK), all bits (-MASK),
                                or exactly MASK bits are set in file's mode
                -user NAME/ID   File is owned by given user
                -group NAME/ID  File is owned by given group
                -size N[bck]    File size is N (c:bytes,k:kbytes,b:512 bytes(def.))
                                +/-N: file size is bigger/smaller than N
                -prune          If current file is directory, don't descend into it
        If none of the following actions is specified, -print is assumed
                -print          Print file name
                -print0         Print file name, NUL terminated
                -exec CMD ARG ; Run CMD with all instances of {} replaced by
                                file name. Fails if CMD exits with nonzero

    free
        free

        Display the amount of free and used system memory

    fsync
        fsync [-d] FILE...

        Write files' buffered blocks to disk

                -d      Avoid syncing metadata

    grep
        grep [-HhnlLoqvsriwFE] [-m N] [-A/B/C N] PATTERN/-e PATTERN.../-f
        FILE [FILE]...

        Search for PATTERN in FILEs (or stdin)

                -H      Add 'filename:' prefix
                -h      Do not add 'filename:' prefix
                -n      Add 'line_no:' prefix
                -l      Show only names of files that match
                -L      Show only names of files that don't match
                -c      Show only count of matching lines
                -o      Show only the matching part of line
                -q      Quiet. Return 0 if PATTERN is found, 1 otherwise
                -v      Select non-matching lines
                -s      Suppress open and read errors
                -r      Recurse
                -i      Ignore case
                -w      Match whole words only
                -x      Match whole lines only
                -F      PATTERN is a literal (not regexp)
                -E      PATTERN is an extended regexp
                -m N    Match up to N times per file
                -A N    Print N lines of trailing context
                -B N    Print N lines of leading context
                -C N    Same as '-A N -B N'
                -e PTRN Pattern to match
                -f FILE Read pattern from file

    gunzip
        gunzip [-cft] [FILE]...

        Decompress FILEs (or stdin)

                -c      Write to stdout
                -f      Force
                -t      Test file integrity

    gzip
        gzip [-cfd] [FILE]...

        Compress FILEs (or stdin)

                -d      Decompress
                -c      Write to stdout
                -f      Force

    halt
        halt [-d DELAY] [-n] [-f]

        Halt the system

                -d SEC  Delay interval
                -n      Do not sync
                -f      Force (don't go through init)

    head
        head [OPTIONS] [FILE]...

        Print first 10 lines of each FILE (or stdin) to stdout. With more
        than one FILE, precede each with a filename header.

                -n N[kbm]       Print first N lines
                -n -N[kbm]      Print all except N last lines
                -c [-]N[kbm]    Print first N bytes
                -q              Never print headers
                -v              Always print headers

        N may be suffixed by k (x1024), b (x512), or m (x1024^2).

    hexdump
        hexdump [-bcCdefnosvx] [FILE]...

        Display FILEs (or stdin) in a user specified format

                -b              One-byte octal display
                -c              One-byte character display
                -C              Canonical hex+ASCII, 16 bytes per line
                -d              Two-byte decimal display
                -e FORMAT_STRING
                -f FORMAT_FILE
                -n LENGTH       Interpret only LENGTH bytes of input
                -o              Two-byte octal display
                -s OFFSET       Skip OFFSET bytes
                -v              Display all input data
                -x              Two-byte hexadecimal display

    hostid
        hostid

        Print out a unique 32-bit identifier for the machine

    hwclock
        hwclock [-r] [-s] [-w] [-t] [-l] [-u] [-f FILE]

        Query and set hardware clock (RTC)

                -r      Show hardware clock time
                -s      Set system time from hardware clock
                -w      Set hardware clock from system time
                -t      Set in-kernel timezone, correct system time
                        if hardware clock is in local time
                -u      Assume hardware clock is kept in UTC
                -l      Assume hardware clock is kept in local time
                -f FILE Use specified device (e.g. /dev/rtc2)

    id  id [OPTIONS] [USER]

        Print information about USER or the current user

                -u      User ID
                -g      Group ID
                -G      Supplementary group IDs
                -n      Print names instead of numbers
                -r      Print real ID instead of effective ID

    ifconfig
        ifconfig [-a] interface [address]

        Configure a network interface

                [add ADDRESS[/PREFIXLEN]]
                [del ADDRESS[/PREFIXLEN]]
                [[-]broadcast [ADDRESS]] [[-]pointopoint [ADDRESS]]
                [netmask ADDRESS] [dstaddr ADDRESS]
                [hw ether ADDRESS] [metric NN] [mtu NN]
                [[-]trailers] [[-]arp] [[-]allmulti]
                [multicast] [[-]promisc] [txqueuelen NN] [[-]dynamic]
                [up|down] ...

    kill
        kill [-l] [-SIG] PID...

        Send a signal (default: TERM) to given PIDs

                -l      List all signal names and numbers

    killall
        killall [-l] [-q] [-SIG] PROCESS_NAME...

        Send a signal (default: TERM) to given processes

                -l      List all signal names and numbers
                -q      Don't complain if no processes were killed

    less
        less [-ENh~I?] [FILE]...

        View FILE (or stdin) one screenful at a time

                -E      Quit once the end of a file is reached
                -N      Prefix line number to each line
                -I      Ignore case in all searches
                -~      Suppress ~s displayed past EOF

    ln  ln [OPTIONS] TARGET... LINK|DIR

        Create a link LINK or DIR/TARGET to the specified TARGET(s)

                -s      Make symlinks instead of hardlinks
                -f      Remove existing destinations
                -n      Don't dereference symlinks - treat like normal file
                -b      Make a backup of the target (if exists) before link operation
                -S suf  Use suffix instead of ~ when making backup files
                -T      2nd arg must be a DIR
                -v      Verbose

    logger
        logger [OPTIONS] [MESSAGE]

        Write MESSAGE (or stdin) to syslog

                -s      Log to stderr as well as the system log
                -t TAG  Log using the specified tag (defaults to user name)
                -p PRIO Priority (numeric or facility.level pair)

    ls  ls [-1AaCxdLHRFplinsehrSXvctu] [-w WIDTH] [FILE]...

        List directory contents

                -1      One column output
                -a      Include entries which start with .
                -A      Like -a, but exclude . and ..
                -C      List by columns
                -x      List by lines
                -d      List directory entries instead of contents
                -L      Follow symlinks
                -H      Follow symlinks on command line
                -R      Recurse
                -p      Append / to dir entries
                -F      Append indicator (one of */=@|) to entries
                -l      Long listing format
                -i      List inode numbers
                -n      List numeric UIDs and GIDs instead of names
                -s      List allocated blocks
                -e      List full date and time
                -h      List sizes in human readable format (1K 243M 2G)
                -r      Sort in reverse order
                -S      Sort by size
                -X      Sort by extension
                -v      Sort by version
                -c      With -l: sort by ctime
                -t      With -l: sort by mtime
                -u      With -l: sort by atime
                -w N    Assume the terminal is N columns wide
                --color[={always,never,auto}]   Control coloring

    md5sum
        md5sum [-c[sw]] [FILE]...

        Print or check MD5 checksums

                -c      Check sums against list in FILEs
                -s      Don't output anything, status code shows success
                -w      Warn about improperly formatted checksum lines

    mkdir
        mkdir [OPTIONS] DIRECTORY...

        Create DIRECTORY

                -m MODE Mode
                -p      No error if exists; make parent directories as needed

    mkfifo
        mkfifo [-m MODE] NAME

        Create named pipe

                -m MODE Mode (default a=rw)

    mknod
        mknod [-m MODE] NAME TYPE MAJOR MINOR

        Create a special file (block, character, or pipe)

                -m MODE Creation mode (default a=rw)
        TYPE:
                b       Block device
                c or u  Character device
                p       Named pipe (MAJOR and MINOR are ignored)

    mkswap
        mkswap [-L LBL] BLOCKDEV [KBYTES]

        Prepare BLOCKDEV to be used as swap partition

                -L LBL  Label

    mktemp
        mktemp [-dt] [-p DIR] [TEMPLATE]

        Create a temporary file with name based on TEMPLATE and print its
        name. TEMPLATE must end with XXXXXX (e.g. [/dir/]nameXXXXXX).
        Without TEMPLATE, -t tmp.XXXXXX is assumed.

                -d      Make directory, not file
                -q      Fail silently on errors
                -t      Prepend base directory name to TEMPLATE
                -p DIR  Use DIR as a base directory (implies -t)
                -u      Do not create anything; print a name

        Base directory is: -p DIR, else $TMPDIR, else /tmp

    mount
        mount [OPTIONS] [-o OPTS] DEVICE NODE

        Mount a filesystem. Filesystem autodetection requires /proc.

                -a              Mount all filesystems in fstab
                -i              Don't run mount helper
                -r              Read-only mount
                -w              Read-write mount (default)
                -t FSTYPE[,...] Filesystem type(s)
                -O OPT          Mount only filesystems with option OPT (-a only)
        -o OPT:
                loop            Ignored (loop devices are autodetected)
                [a]sync         Writes are [a]synchronous
                [no]atime       Disable/enable updates to inode access times
                [no]diratime    Disable/enable atime updates to directories
                [no]relatime    Disable/enable atime updates relative to modification time
                [no]dev         (Dis)allow use of special device files
                [no]exec        (Dis)allow use of executable files
                [no]suid        (Dis)allow set-user-id-root programs
                [r]shared       Convert [recursively] to a shared subtree
                [r]slave        Convert [recursively] to a slave subtree
                [r]private      Convert [recursively] to a private subtree
                [un]bindable    Make mount point [un]able to be bind mounted
                [r]bind         Bind a file or directory [recursively] to another location
                move            Relocate an existing mount point
                remount         Remount a mounted filesystem, changing flags
                ro/rw           Same as -r/-w

        There are filesystem-specific -o flags.

    mv  mv [-fin] SOURCE DEST or: mv [-fin] SOURCE... DIRECTORY

        Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY

                -f      Don't prompt before overwriting
                -i      Interactive, prompt before overwrite
                -n      Don't overwrite an existing file

    nc  nc [IPADDR PORT]

        Open a pipe to IP:PORT

    netstat
        netstat [-ral] [-tuwx] [-enWp]

        Display networking information

                -r      Routing table
                -a      All sockets
                -l      Listening sockets
                        Else: connected sockets
                -t      TCP sockets
                -u      UDP sockets
                -w      Raw sockets
                -x      Unix sockets
                        Else: all socket types
                -e      Other/more information
                -n      Don't resolve names
                -W      Wide display
                -p      Show PID/program name for sockets

    nice
        nice [-n ADJUST] [PROG ARGS]

        Change scheduling priority, run PROG

                -n ADJUST       Adjust priority by ADJUST

    nslookup
        nslookup [HOST] [SERVER]

        Query the nameserver for the IP address of the given HOST optionally
        using a specified DNS server

    ntpd
        ntpd [-dnqNwl] [-S PROG] [-p PEER]...

        NTP client/server

                -d      Verbose
                -n      Do not daemonize
                -q      Quit after clock is set
                -N      Run at high priority
                -w      Do not set time (only query peers), implies -n
                -l      Run as server on port 123
                -S PROG Run PROG after stepping time, stratum change, and every 11 mins
                -p PEER Obtain time from PEER (may be repeated)

    passwd
        passwd [OPTIONS] [USER]

        Change USER's password (default: current user)

                -a ALG  Encryption method
                -d      Set password to ''
                -l      Lock (disable) account
                -u      Unlock (enable) account

    pgrep
        pgrep [-flnovx] [-s SID|-P PPID|PATTERN]

        Display process(es) selected by regex PATTERN

                -l      Show command name too
                -f      Match against entire command line
                -n      Show the newest process only
                -o      Show the oldest process only
                -v      Negate the match
                -x      Match whole name (not substring)
                -s      Match session ID (0 for current)
                -P      Match parent process ID

    pidof
        pidof [NAME]...

        List PIDs of all processes with names that match NAMEs

    ping
        ping [OPTIONS] HOST

        Send ICMP ECHO_REQUEST packets to network hosts

                -4,-6           Force IP or IPv6 name resolution
                -c CNT          Send only CNT pings
                -s SIZE         Send SIZE data bytes in packets (default:56)
                -t TTL          Set TTL
                -I IFACE/IP     Use interface or IP address as source
                -W SEC          Seconds to wait for the first response (default:10)
                                (after all -c CNT packets are sent)
                -w SEC          Seconds until ping exits (default:infinite)
                                (can exit earlier with -c CNT)
                -q              Quiet, only displays output at start
                                and when finished

    ping6
        ping6 [OPTIONS] HOST

        Send ICMP ECHO_REQUEST packets to network hosts

                -c CNT          Send only CNT pings
                -s SIZE         Send SIZE data bytes in packets (default:56)
                -I IFACE/IP     Use interface or IP address as source
                -q              Quiet, only displays output at start
                                and when finished

    pivot_root
        pivot_root NEW_ROOT PUT_OLD

        Move the current root file system to PUT_OLD and make NEW_ROOT the
        new root file system

    poweroff
        poweroff [-d DELAY] [-n] [-f]

        Halt and shut off power

                -d SEC  Delay interval
                -n      Do not sync
                -f      Force (don't go through init)

    printf
        printf FORMAT [ARG]...

        Format and print ARG(s) according to FORMAT (a-la C printf)

    ps  ps

        Show list of processes

                w       Wide output

    pwd pwd

        Print the full filename of the current working directory

    readlink
        readlink [-fnv] FILE

        Display the value of a symlink

                -f      Canonicalize by following all symlinks
                -n      Don't add newline
                -v      Verbose

    reboot
        reboot [-d DELAY] [-n] [-f]

        Reboot the system

                -d SEC  Delay interval
                -n      Do not sync
                -f      Force (don't go through init)

    reset
        reset

        Reset the screen

    rm  rm [-irf] FILE...

        Remove (unlink) FILEs

                -i      Always prompt before removing
                -f      Never prompt
                -R,-r   Recurse

    rmdir
        rmdir [OPTIONS] DIRECTORY...

        Remove DIRECTORY if it is empty

                -p      Include parents

    route
        route [{add|del|delete}]

        Edit kernel routing tables

                -n      Don't resolve names
                -e      Display other/more information
                -A inet{6}      Select address family

    sed sed [-inrE] [-f FILE]... [-e CMD]... [FILE]... or: sed [-inrE] CMD
        [FILE]...

                -e CMD  Add CMD to sed commands to be executed
                -f FILE Add FILE contents to sed commands to be executed
                -i[SFX] Edit files in-place (otherwise sends to stdout)
                        Optionally back files up, appending SFX
                -n      Suppress automatic printing of pattern space
                -r,-E   Use extended regex syntax

        If no -e or -f, the first non-option argument is the sed command
        string. Remaining arguments are input files (stdin if none).

    seq seq [-w] [-s SEP] [FIRST [INC]] LAST

        Print numbers from FIRST to LAST, in steps of INC. FIRST, INC
        default to 1.

                -w      Pad to last with leading zeros
                -s SEP  String separator

    sh  sh [-/+OPTIONS] [-/+o OPT]... [-c 'SCRIPT' [ARG0 [ARGS]] / FILE
        [ARGS]]

        Unix shell interpreter

    sleep
        sleep [N]...

        Pause for a time equal to the total of the args given, where each
        arg can have an optional suffix of (s)econds, (m)inutes, (h)ours, or
        (d)ays

    sort
        sort [-nru] [FILE]...

        Sort lines of text

                -n      Sort numbers
                -r      Reverse sort order
                -u      Suppress duplicate lines

    start-stop-daemon
        start-stop-daemon [OPTIONS] [-S|-K] ... [-- ARGS...]

        Search for matching processes, and then -K: stop all matching
        processes. -S: start a process unless a matching process is found.

        Process matching:

                -u USERNAME|UID Match only this user's processes
                -n NAME         Match processes with NAME
                                in comm field in /proc/PID/stat
                -x EXECUTABLE   Match processes with this command
                                command in /proc/PID/cmdline
                -p FILE         Match a process with PID from the file
                All specified conditions must match
        -S only:
                -x EXECUTABLE   Program to run
                -a NAME         Zeroth argument
                -b              Background
                -c USER[:[GRP]] Change to user/group
                -m              Write PID to the pidfile specified by -p
        -K only:
                -s SIG          Signal to send
                -t              Match only, exit with 0 if a process is found
        Other:

                -q              Quiet

    strings
        strings [-afo] [-n LEN] [FILE]...

        Display printable strings in a binary file

                -a      Scan whole file (default)
                -f      Precede strings with filenames
                -n LEN  At least LEN characters form a string (default 4)
                -o      Precede strings with decimal offsets

    switch_root
        switch_root [-c /dev/console] NEW_ROOT NEW_INIT [ARGS]

        Free initramfs and switch to another root fs:

        chroot to NEW_ROOT, delete all in /, move NEW_ROOT to /, execute
        NEW_INIT. PID must be 1. NEW_ROOT must be a mountpoint.

                -c DEV  Reopen stdio to DEV after switch

    sync
        sync

        Write all buffered blocks to disk

    sysctl
        sysctl [OPTIONS] [KEY[=VALUE]]...

        Show/set kernel parameters

                -e      Don't warn about unknown keys
                -n      Don't show key names
                -a      Show all values
                -w      Set values
                -p FILE Set values from FILE (default /etc/sysctl.conf)
                -q      Set values silently

    tail
        tail [OPTIONS] [FILE]...

        Print last 10 lines of each FILE (or stdin) to stdout. With more
        than one FILE, precede each with a filename header.

                -f              Print data as file grows
                -s SECONDS      Wait SECONDS between reads with -f
                -n N[kbm]       Print last N lines
                -n +N[kbm]      Start on Nth line and print the rest
                -c [+]N[kbm]    Print last N bytes
                -q              Never print headers
                -v              Always print headers

        N may be suffixed by k (x1024), b (x512), or m (x1024^2).

    tar tar -[cxtzhvO] [-X FILE] [-T FILE] [-f TARFILE] [-C DIR] [FILE]...

        Create, extract, or list files from a tar file

        Operation:

                c       Create
                x       Extract
                t       List
                f       Name of TARFILE ('-' for stdin/out)
                C       Change to DIR before operation
                v       Verbose
                z       (De)compress using gzip
                O       Extract to stdout
                h       Follow symlinks
                X       File with names to exclude
                T       File with names to include

    tee tee [-ai] [FILE]...

        Copy stdin to each FILE, and also to stdout

                -a      Append to the given FILEs, don't overwrite
                -i      Ignore interrupt signals (SIGINT)

    telnet
        telnet HOST [PORT]

        Connect to telnet server

    telnetd
        telnetd [OPTIONS]

        Handle incoming telnet connections

                -l LOGIN        Exec LOGIN on connect
                -f ISSUE_FILE   Display ISSUE_FILE instead of /etc/issue
                -K              Close connection as soon as login exits
                                (normally wait until all programs close slave pty)
                -p PORT         Port to listen on
                -b ADDR[:PORT]  Address to bind to
                -F              Run in foreground
                -i              Inetd mode

    test
        test EXPRESSION ]

        Check file types, compare values etc. Return a 0/1 exit code
        depending on logical value of EXPRESSION

    time
        time [-v] PROG ARGS

        Run PROG, display resource usage when it exits

                -v      Verbose

    top top [-b] [-nCOUNT] [-dSECONDS]

        Provide a view of process activity in real time. Read the status of
        all processes from /proc each SECONDS and display a screenful of
        them. Keys:

                N/M/P/T: sort by pid/mem/cpu/time
                R: reverse sort
                Q,^C: exit

        Options:

                -b      Batch mode
                -n N    Exit after N iterations
                -d N    Delay between updates

    touch
        touch [-c] FILE...

        Update the last-modified date on the given FILE[s]

                -c      Don't create files

    tr  tr [-cds] STRING1 [STRING2]

        Translate, squeeze, or delete characters from stdin, writing to
        stdout

                -c      Take complement of STRING1
                -d      Delete input characters coded STRING1
                -s      Squeeze multiple output characters of STRING2 into one character

    traceroute
        traceroute [-FIldnrv] [-f 1ST_TTL] [-m MAXTTL] [-p PORT] [-q PROBES]
        [-s SRC_IP] [-t TOS] [-w WAIT_SEC] [-g GATEWAY] [-i IFACE] [-z
        PAUSE_MSEC] HOST [BYTES]

        Trace the route to HOST

                -F      Set the don't fragment bit
                -I      Use ICMP ECHO instead of UDP datagrams
                -l      Display the TTL value of the returned packet
                -d      Set SO_DEBUG options to socket
                -n      Print numeric addresses
                -r      Bypass routing tables, send directly to HOST
                -v      Verbose
                -m      Max time-to-live (max number of hops)
                -p      Base UDP port number used in probes
                        (default 33434)
                -q      Number of probes per TTL (default 3)
                -s      IP address to use as the source address
                -t      Type-of-service in probe packets (default 0)
                -w      Time in seconds to wait for a response (default 3)
                -g      Loose source route gateway (8 max)

    true
        true

        Return an exit code of TRUE (0)

    udhcpc
        udhcpc [-fbqRB] [-t N] [-T SEC] [-A SEC/-n] [-i IFACE] [-s PROG] [-p
        PIDFILE] [-oC] [-r IP] [-V VENDOR] [-F NAME] [-x OPT:VAL]... [-O
        OPT]...

                -i,--interface IFACE    Interface to use (default eth0)
                -s,--script PROG        Run PROG at DHCP events (default /usr/share/udhcpc/default.script)
                -p,--pidfile FILE       Create pidfile
                -B,--broadcast          Request broadcast replies
                -t,--retries N          Send up to N discover packets (default 3)
                -T,--timeout SEC        Pause between packets (default 3)
                -A,--tryagain SEC       Wait if lease is not obtained (default 20)
                -n,--now                Exit if lease is not obtained
                -q,--quit               Exit after obtaining lease
                -R,--release            Release IP on exit
                -f,--foreground         Run in foreground
                -b,--background         Background if lease is not obtained
                -S,--syslog             Log to syslog too
                -r,--request IP         Request this IP address
                -o,--no-default-options Don't request any options (unless -O is given)
                -O,--request-option OPT Request option OPT from server (cumulative)
                -x OPT:VAL              Include option OPT in sent packets (cumulative)
                                        Examples of string, numeric, and hex byte opts:
                                        -x hostname:bbox - option 12
                                        -x lease:3600 - option 51 (lease time)
                                        -x 0x3d:0100BEEFC0FFEE - option 61 (client id)
                -F,--fqdn NAME          Ask server to update DNS mapping for NAME
                -V,--vendorclass VENDOR Vendor identifier (default 'udhcp VERSION')
                -C,--clientid-none      Don't send MAC as client identifier
        Signals:

                USR1    Renew lease
                USR2    Release lease

    umount
        umount [OPTIONS] FILESYSTEM|DIRECTORY

        Unmount file systems

                -a      Unmount all file systems
                -r      Try to remount devices as read-only if mount is busy
                -l      Lazy umount (detach filesystem)
                -f      Force umount (i.e., unreachable NFS server)
                -D      Don't free loop device even if it has been used

    uname
        uname [-amnrspv]

        Print system information

                -a      Print all
                -m      The machine (hardware) type
                -n      Hostname
                -r      OS release
                -s      OS name (default)
                -p      Processor type
                -v      OS version

    uniq
        uniq [-cdu][-f,s,w N] [INPUT [OUTPUT]]

        Discard duplicate lines

                -c      Prefix lines by the number of occurrences
                -d      Only print duplicate lines
                -u      Only print unique lines
                -f N    Skip first N fields
                -s N    Skip first N chars (after any skipped fields)
                -w N    Compare N characters in line

    uptime
        uptime

        Display the time since the last boot

    vconfig
        vconfig COMMAND [OPTIONS]

        Create and remove virtual ethernet devices

                add             IFACE VLAN_ID
                rem             VLAN_NAME
                set_flag        IFACE 0|1 VLAN_QOS
                set_egress_map  VLAN_NAME SKB_PRIO VLAN_QOS
                set_ingress_map VLAN_NAME SKB_PRIO VLAN_QOS
                set_name_type   NAME_TYPE

    vi  vi [OPTIONS] [FILE]...

        Edit FILE

                -c CMD  Initial command to run ($EXINIT also available)
                -R      Read-only
                -H      List available features

    wc  wc [-clwL] [FILE]...

        Count lines, words, and bytes for each FILE (or stdin)

                -c      Count bytes
                -l      Count newlines
                -w      Count words
                -L      Print longest line length

    wget
        wget [-c|--continue] [-s|--spider] [-q|--quiet]
        [-O|--output-document FILE] [--header 'header: value'] [-Y|--proxy
        on/off] [-P DIR] [-U|--user-agent AGENT] URL...

        Retrieve files via HTTP or FTP

                -s      Spider mode - only check file existence
                -c      Continue retrieval of aborted transfer
                -q      Quiet
                -P DIR  Save to DIR (default .)
                -O FILE Save to FILE ('-' for stdout)
                -U STR  Use STR for User-Agent header
                -Y      Use proxy ('on' or 'off')

    which
        which [COMMAND]...

        Locate a COMMAND

    xargs
        xargs [OPTIONS] [PROG ARGS]

        Run PROG on every item given by stdin

                -p      Ask user whether to run each command
                -r      Don't run command if input is empty
                -0      Input is separated by NUL characters
                -t      Print the command on stderr before execution
                -e[STR] STR stops input processing
                -n N    Pass no more than N args to PROG
                -s N    Pass command line of no more than N bytes
                -x      Exit if size is exceeded

    yes yes [STRING]

        Repeatedly output a line with STRING, or 'y'

    zcat
        zcat [FILE]...

        Decompress to stdout

LIBC NSS
    GNU Libc (glibc) uses the Name Service Switch (NSS) to configure the
    behavior of the C library for the local environment, and to configure
    how it reads system data, such as passwords and group information. This
    is implemented using an /etc/nsswitch.conf configuration file, and using
    one or more of the /lib/libnss_* libraries. BusyBox tries to avoid using
    any libc calls that make use of NSS. Some applets however, such as login
    and su, will use libc functions that require NSS.

    If you enable CONFIG_USE_BB_PWD_GRP, BusyBox will use internal functions
    to directly access the /etc/passwd, /etc/group, and /etc/shadow files
    without using NSS. This may allow you to run your system without the
    need for installing any of the NSS configuration files and libraries.

    When used with glibc, the BusyBox 'networking' applets will similarly
    require that you install at least some of the glibc NSS stuff (in
    particular, /etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*,
    and /lib/libresolv*).

    Shameless Plug: As an alternative, one could use a C library such as
    uClibc. In addition to making your system significantly smaller, uClibc
    does not require the use of any NSS support files or libraries.

MAINTAINER
    Denis Vlasenko <vda.linux@googlemail.com>

AUTHORS
    The following people have contributed code to BusyBox whether they know
    it or not. If you have written code included in BusyBox, you should
    probably be listed here so you can obtain your bit of eternal glory. If
    you should be listed here, or the description of what you have done
    needs more detail, or is incorrect, please send in an update.

    Emanuele Aina <emanuele.aina@tiscali.it> run-parts

    Erik Andersen <andersen@codepoet.org>

        Tons of new stuff, major rewrite of most of the
        core apps, tons of new apps as noted in header files.
        Lots of tedious effort writing these boring docs that
        nobody is going to actually read.

    Laurence Anderson <l.d.anderson@warwick.ac.uk>

        rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm

    Jeff Angielski <jeff@theptrgroup.com>

        ftpput, ftpget

    Edward Betts <edward@debian.org>

        expr, hostid, logname, whoami

    John Beppu <beppu@codepoet.org>

        du, nslookup, sort

    Brian Candler <B.Candler@pobox.com>

        tiny-ls(ls)

    Randolph Chung <tausq@debian.org>

        fbset, ping, hostname

    Dave Cinege <dcinege@psychosis.com>

        more(v2), makedevs, dutmp, modularization, auto links file,
        various fixes, Linux Router Project maintenance

    Jordan Crouse <jordan@cosmicpenguin.net>

        ipcalc

    Magnus Damm <damm@opensource.se>

        tftp client insmod powerpc support

    Larry Doolittle <ldoolitt@recycle.lbl.gov>

        pristine source directory compilation, lots of patches and fixes.

    Glenn Engel <glenne@engel.org>

        httpd

    Gennady Feldman <gfeldman@gena01.com>

        Sysklogd (single threaded syslogd, IPC Circular buffer support,
        logread), various fixes.

    Karl M. Hegbloom <karlheg@debian.org>

        cp_mv.c, the test suite, various fixes to utility.c, &c.

    Daniel Jacobowitz <dan@debian.org>

        mktemp.c

    Matt Kraai <kraai@alumni.cmu.edu>

        documentation, bugfixes, test suite

    Stephan Linz <linz@li-pro.net>

        ipcalc, Red Hat equivalence

    John Lombardo <john@deltanet.com>

        tr

    Glenn McGrath <bug1@iinet.net.au>

        Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
        nameif, sed, patch, fold, install, uudecode.
        Various bugfixes, review and apply numerous patches.

    Manuel Novoa III <mjn3@codepoet.org>

        cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
        mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
        get_last_path_component, simplify_path, and a number trivial libbb routines

        also bug fixes, partial rewrites, and size optimizations in
        ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
        mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
        interface, dutmp, ifconfig, route

    Vladimir Oleynik <dzo@simtreas.ru>

        cmdedit; xargs(current), httpd(current);
        ports: ash, crond, fdisk, inetd, stty, traceroute, top;
        locale, various fixes
        and irreconcilable critic of everything not perfect.

    Bruce Perens <bruce@pixar.com>

        Original author of BusyBox in 1995, 1996. Some of his code can
        still be found hiding here and there...

    Tim Riker <Tim@Rikers.org>

        bug fixes, member of fan club

    Kent Robotti <robotti@metconnect.com>

        reset, tons and tons of bug reports and patches.

    Chip Rosenthal <chip@unicom.com>, <crosenth@covad.com>

        wget - Contributed by permission of Covad Communications

    Pavel Roskin <proski@gnu.org>

        Lots of bugs fixes and patches.

    Gyepi Sam <gyepi@praxis-sw.com>

        Remote logging feature for syslogd

    Linus Torvalds <torvalds@transmeta.com>

        mkswap, fsck.minix, mkfs.minix

    Mark Whitley <markw@codepoet.org>

        grep, sed, cut, xargs(previous),
        style-guide, new-applet-HOWTO, bug fixes, etc.

    Charles P. Wright <cpwright@villagenet.com>

        gzip, mini-netcat(nc)

    Enrique Zanardi <ezanardi@ull.es>

        tarcat (since removed), loadkmap, various fixes, Debian maintenance

    Tito Ragusa <farmatito@tiscali.it>

        devfsd and size optimizations in strings, openvt and deallocvt.

    Paul Fox <pgf@foxharp.boston.ma.us>

        vi editing mode for ash, various other patches/fixes

    Roberto A. Foglietta <me@roberto.foglietta.name>

        port: dnsd

    Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>

        misc

    Mike Frysinger <vapier@gentoo.org>

        initial e2fsprogs, printenv, setarch, sum, misc

    Jie Zhang <jie.zhang@analog.com>

        fixed two bugs in msh and hush (exitcode of killed processes)

